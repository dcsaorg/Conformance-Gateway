{
  "openapi": "3.0.3",
  "info": {
    "title": "DCSA Adoption API",
    "description": "Meta-API with which container shipping organizations can share statistics on their adoption of DCSA standards.\n",
    "contact": {
      "name": "Digital Container Shipping Association (DCSA)",
      "url": "https://dcsa.org/",
      "email": "info@dcsa.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0_with_push"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/v1/adoption-stats": {
      "get": {
        "summary": "Retrieve adoption statistics (DCSA to call \"Adopter\" endPoint)",
        "description": "Retrieve the adoption statistics, currently the number of API calls by DCSA standard, version, traffic-direction, endpoint, query parameter set and response status.\n\n**Note:** This endPoint is to be implemented on \"adopter\" side and for DCSA to call\n",
        "operationId": "get-adoption-stats",
        "parameters": [
          {
            "name": "interval",
            "in": "query",
            "description": "The type of interval for which to retrieve statistics:\n- `day` (per day)\n- `week` (per week)\n- `month`(per month)\n",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "month",
              "enum": [
                "day",
                "week",
                "month"
              ]
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date (or any date within the week or month interval) for which to return the statistics, in YYYY-MM-DD format.\n",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-06-21"
            }
          },
          {
            "name": "API-Version",
            "in": "header",
            "description": "An API-Version header **MAY** be added to the request (optional); if added it **MUST** only contain **MAJOR** version. API-Version header **MUST** be aligned with the URI version.\n",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response containing the adoption statistics.\n",
            "headers": {
              "API-Version": {
                "$ref": "#/components/headers/API-Version"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdoptionStats"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters.\n"
          },
          "500": {
            "description": "Internal server error.\n"
          }
        }
      },
      "put": {
        "summary": "Send (Push) adoption statistics (DCSA endPoint)",
        "description": "Send (Push) the adoption statistics, currently the number of API calls by DCSA standard, version, traffic-direction, endpoint, query parameter set and response status.\n\n**Note:** This endPoint is for DCSA to implement and for the adopter to call\n",
        "operationId": "put-adoption-stats",
        "parameters": [
          {
            "name": "API-Version",
            "in": "header",
            "description": "An API-Version header **MAY** be added to the request (optional); if added it **MUST** only contain **MAJOR** version. API-Version header **MUST** be aligned with the URI version.\n",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "requestBody": {
          "description": "The adoption statistics being pushed by the adopter to DCSA.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdoptionStats"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "",
            "headers": {
              "API-Version": {
                "$ref": "#/components/headers/API-Version"
              }
            }
          },
          "400": {
            "description": "Invalid request.\n"
          },
          "500": {
            "description": "Internal server error.\n"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdoptionStats": {
        "required": [
          "apiCallsStatsByStandards",
          "endDate",
          "interval",
          "lastUpdatedDateTime",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "lastUpdatedDateTime": {
            "type": "string",
            "description": "The DateTime when the stats were last updated. Must be formatted using [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.\n",
            "format": "date-time",
            "example": "2024-06-18T20:44:37+01:00"
          },
          "interval": {
            "type": "string",
            "description": "The type of interval for the statistics are provided (day, week, or month).\n",
            "example": "day",
            "enum": [
              "day",
              "week",
              "month"
            ]
          },
          "startDate": {
            "type": "string",
            "description": "The first date of the time interval for which the stats are provided, in YYYY-MM-DD format.\n",
            "format": "date",
            "example": "2024-06-16"
          },
          "endDate": {
            "type": "string",
            "description": "The last date of the time interval for which the stats are provided, in YYYY-MM-DD format.\n",
            "format": "date",
            "example": "2024-06-22"
          },
          "apiCallsStatsByStandards": {
            "minItems": 1,
            "type": "array",
            "description": "The API call statistics by DCSA standard, version, traffic-direction, endpoint, query parameter set and response HTTP status.\n",
            "items": {
              "$ref": "#/components/schemas/ApiCallsStandardStats"
            }
          }
        }
      },
      "ApiCallsStandardStats": {
        "required": [
          "byVersions",
          "standardName"
        ],
        "type": "object",
        "properties": {
          "standardName": {
            "maxLength": 20,
            "type": "string",
            "description": "Name of the DCSA standard.\n- `AN` (Arrival Notice)\n- `BKG` (Booking)\n- `CBF` (Consolidated Booking Forecast)\n- `CRO` (Container Release Order)\n- `CS` (Commercial Schedules)\n- `DI` (Delivery Instruction)\n- `DO` (Delivery Order)\n- `EBL` (Electronic Bill of Lading)\n- `EBL_ISS` (Electronic Bill of Lading Issuance)\n- `EBL_SUR` (Electronic Bill of Lading Surrender)\n- `IC` (IoT Commercial)\n- `IO` (IoT Operations)\n- `JIT` (Just In Time Portcall)\n- `OVS` (Operational Vessel Schedules)\n- `RMC` (Reefer Monitoring Commercial)\n- `RMO` (Operational Reefer Monitoring)\n- `TNT` (Track and Trace)\n- `TO` (Transport Order)\n",
            "example": "TNT"
          },
          "byVersions": {
            "minItems": 1,
            "type": "array",
            "description": "The API calls statistics for each version of this DCSA standard.\n",
            "items": {
              "$ref": "#/components/schemas/ApiCallsVersionStats"
            }
          }
        },
        "description": "The API calls statistics for one DCSA standard.\n"
      },
      "ApiCallsVersionStats": {
        "required": [
          "byInboundEndpoints",
          "byOutboundEndpoints",
          "versionNumber"
        ],
        "type": "object",
        "properties": {
          "versionNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "The version number of the DCSA standard.\n",
            "example": "2.2.0"
          },
          "byInboundEndpoints": {
            "type": "array",
            "description": "The statistics of the API calls received on each inbound endpoint of a standard.\n\nIf no `inbound` traffic has been recorded the empty list should be returned\n",
            "items": {
              "$ref": "#/components/schemas/ApiCallsEndpointStats"
            }
          },
          "byOutboundEndpoints": {
            "type": "array",
            "description": "The statistics of the API calls made to each outbound endpoint of a standard.\n\nIf no `outbound` traffic has been recorded the empty list should be returned\n",
            "items": {
              "$ref": "#/components/schemas/ApiCallsEndpointStats"
            }
          }
        },
        "description": "The API calls statistics for each version of a DCSA standard.\n"
      },
      "ApiCallsEndpointStats": {
        "required": [
          "byQueryParameterSets",
          "endpointUri",
          "httpMethod"
        ],
        "type": "object",
        "properties": {
          "httpMethod": {
            "type": "string",
            "description": "The HTTP method used to make the request e.g. `GET`, `POST`, etc\n",
            "example": "POST",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "PATCH"
            ]
          },
          "endpointUri": {
            "type": "string",
            "description": "The URI of the OpenAPI endpoint on which these calls are made / received.\n",
            "example": "/v1/events"
          },
          "byQueryParameterSets": {
            "minItems": 1,
            "type": "array",
            "description": "The API calls statistics by the request query parameter set.\n",
            "items": {
              "$ref": "#/components/schemas/ApiCallsQueryParameterSetStats"
            }
          }
        }
      },
      "ApiCallsQueryParameterSetStats": {
        "required": [
          "byHttpStatuses"
        ],
        "type": "object",
        "properties": {
          "queryParameterSet": {
            "type": "array",
            "description": "The list of query parameters used for a call. If none have been supplied this property should be omitted.\n",
            "example": [
              "equipmentReference",
              "limit"
            ],
            "items": {
              "maxLength": 50,
              "type": "string",
              "description": "Name of a queryParameter\n"
            }
          },
          "byHttpStatuses": {
            "minItems": 1,
            "type": "array",
            "description": "The API calls statistics by the HTTP status with which they were responded.\n",
            "items": {
              "$ref": "#/components/schemas/ApiCallsHttpStatusStats"
            }
          }
        }
      },
      "ApiCallsHttpStatusStats": {
        "required": [
          "apiCallCount",
          "averageResponseTime",
          "httpStatusCode",
          "uniqueCounterpartCount"
        ],
        "type": "object",
        "properties": {
          "httpStatusCode": {
            "type": "integer",
            "description": "The HTTP status code with which these API calls were responded.\n",
            "example": 200
          },
          "apiCallCount": {
            "type": "integer",
            "description": "The number of API calls for this DCSA standard, version, direction, endpoint, query parameter set and response status.\n",
            "example": 5400
          },
          "uniqueCounterpartCount": {
            "type": "integer",
            "description": "The number of unique counterparts with which these calls were exchanged. If the value cannot be provided a `0` should be returned.\n",
            "example": 320
          },
          "averageResponseTime": {
            "type": "integer",
            "description": "The average response time of these calls, in milliseconds. If the value cannot be provided a `0` should be returned.\n",
            "example": 1250
          }
        }
      }
    },
    "parameters": {
      "Api-Version-Major": {
        "name": "API-Version",
        "in": "header",
        "description": "An API-Version header **MAY** be added to the request (optional); if added it **MUST** only contain **MAJOR** version. API-Version header **MUST** be aligned with the URI version.\n",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "example": "1"
        }
      }
    },
    "headers": {
      "API-Version": {
        "description": "SemVer used to indicate the version of the contract (API version) returned.\n",
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "example": "1.0.0"
        }
      }
    }
  }
}
