{
  "openapi": "3.0.0",
  "info": {
    "title": "DCSA EBL Surrender API",
    "description": "This API is intended as an API between a carrier (the client) and a EBL Solution Platform (the server).\n\nThis API is used to respond to requests that were submitted via the [DCSA_EBL_SUR](https://app.swaggerhub.com/apis/dcsaorg/DCSA_EBL_SUR/3.0.0-Beta-1) API.\n\n### Stats API\nThe Stats API offers crucial statistical information for both API providers and consumers to enhance their services and helps DCSA to understand and scale the ecosystem. We expect you to invoke the Stats API for every request made to this API. Further details can be found [here](https://developer.dcsa.org/#/http/guides/api-guides/stats-api)\n",
    "contact": {
      "name": "Digital Container Shipping Association (DCSA)",
      "url": "https://dcsa.org",
      "email": "info@dcsa.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "3.0.0-Beta-1"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/dcsaorg/DCSA_EBL_SUR_RSP/3.0.0-Beta-1",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "paths": {
    "/v3/ebl-surrender-responses": {
      "post": {
        "tags": [
          "Surrender Request responses"
        ],
        "description": "The carrier uses this endpoint to inform the EBL Solution Platform about the verdict for a given surrender request.\n",
        "parameters": [
          {
            "name": "API-Version",
            "in": "header",
            "description": "An API-Version header **MAY** be added to the request (optional); if added it **MUST** only contain the **MAJOR** version number. The API-Version header **MUST** be aligned with the URI version.\n",
            "required": false,
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/surrenderRequestAnswer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Request successful",
            "headers": {
              "API-Version": {
                "$ref": "#/components/headers/API-Version"
              }
            }
          },
          "409": {
            "description": "A carrier may only answer once to a surrender request. Subsequent attempts to answer are considered an error and should be rejected with a 409 Conflict code.\n",
            "headers": {
              "API-Version": {
                "$ref": "#/components/headers/API-Version"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "headers": {
              "API-Version": {
                "$ref": "#/components/headers/API-Version"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "surrenderRequestReference": {
        "maxLength": 100,
        "pattern": "^\\S+(\\s+\\S+)*$",
        "type": "string",
        "description": "The surrender request provided by the EBL solution in the surrender request.\n",
        "example": "Z12345"
      },
      "comments": {
        "maxLength": 255,
        "pattern": "^\\S+(\\s+\\S+)*$",
        "type": "string",
        "description": "Free text comment associated with the surrender request transaction.  Must be provided for rejections but should be omitted when accepting the surrender."
      },
      "surrenderRequestAction": {
        "type": "string",
        "description": "Action performed:\n- SURR (Surrendered)\n- SREJ (Surrender rejected)\n\nWhen the carrier accepts the surrender (`SURR`), the platform will inform the party that submitted the surrender request that the surrender has been accepted.  If the surrender is due to an admendment, the carrier will follow up with issuing the admended document to the party that submitted the surrender. The carrier will immediately become the possessor of the bill and can now void it.\n\nWhen the carrier rejects the surrender (`SREJ`), the EBL is returned to the party that submitted the surrender request.\n",
        "enum": [
          "SURR",
          "SREJ"
        ]
      },
      "surrenderRequestAnswer": {
        "required": [
          "action",
          "surrenderRequestReference"
        ],
        "type": "object",
        "properties": {
          "surrenderRequestReference": {
            "$ref": "#/components/schemas/surrenderRequestReference"
          },
          "action": {
            "$ref": "#/components/schemas/surrenderRequestAction"
          },
          "comments": {
            "$ref": "#/components/schemas/comments"
          }
        }
      },
      "error": {
        "required": [
          "errorDateTime",
          "errors",
          "httpMethod",
          "requestUri",
          "statusCode",
          "statusCodeText"
        ],
        "type": "object",
        "properties": {
          "httpMethod": {
            "type": "string",
            "description": "The http request method type e.g. GET, POST\n",
            "example": "POST",
            "enum": [
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "DELETE",
              "OPTION",
              "PATCH"
            ]
          },
          "requestUri": {
            "type": "string",
            "description": "The request URI as it was sent\n",
            "example": "/v1/events"
          },
          "statusCode": {
            "type": "integer",
            "description": "The HTTP status code\n",
            "format": "int32",
            "example": 400
          },
          "statusCodeText": {
            "maxLength": 50,
            "type": "string",
            "description": "The textual representation of the status code\n",
            "example": "Bad Request"
          },
          "errorMessage": {
            "maxLength": 200,
            "type": "string",
            "description": "Other error information\n",
            "example": "The supplied data could not be accepted"
          },
          "providerCorrelationID": {
            "maxLength": 100,
            "type": "string",
            "description": "A unique identifier for the transaction, e.g. a UUID\n",
            "example": "4426d965-0dd8-4005-8c63-dc68b01c4962"
          },
          "errorDateTime": {
            "type": "string",
            "description": "The date and time (in ISO 8601 format) the error occurred.\n",
            "format": "date-time",
            "example": "2019-11-12T07:41:00+08:30"
          },
          "errors": {
            "minItems": 1,
            "type": "array",
            "description": "List of detailed errors, e.g. fields that could not pass validation\n",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/detailedError"
                }
              ]
            }
          }
        }
      },
      "detailedError": {
        "required": [
          "message",
          "reason"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "maximum": 9999,
            "minimum": 7000,
            "type": "integer",
            "description": "Standard error code see http://dcsa.org/error-codes (to be created). Examples: 7003 â€“ out or range value, 7004 -  invalid type\n",
            "format": "int32",
            "example": 7003
          },
          "field": {
            "maxLength": 50,
            "type": "string",
            "description": "The field that caused the error, e.g. a failed validation. The field can be expressed as a [JSONpath](https://github.com/json-path/JsonPath)\n",
            "example": "location.facilityCode"
          },
          "value": {
            "maxLength": 500,
            "type": "string",
            "description": "The value that of the field that caused the error\n",
            "example": "SG SIN WHS"
          },
          "reason": {
            "maxLength": 100,
            "type": "string",
            "description": "High level error message\n",
            "example": "invalidQuery"
          },
          "message": {
            "maxLength": 200,
            "type": "string",
            "description": "Additional information as to why the error occured\n",
            "example": "Spaces not allowed in facility code"
          }
        }
      }
    },
    "parameters": {
      "Api-Version-Major": {
        "name": "API-Version",
        "in": "header",
        "description": "An API-Version header **MAY** be added to the request (optional); if added it **MUST** only contain the **MAJOR** version number. The API-Version header **MUST** be aligned with the URI version.\n",
        "required": false,
        "schema": {
          "type": "string",
          "example": "1"
        }
      }
    },
    "headers": {
      "API-Version": {
        "description": "SemVer used to indicate the version of the contract (API version) returned.",
        "schema": {
          "type": "string",
          "example": "1.0.0"
        }
      }
    }
  }
}