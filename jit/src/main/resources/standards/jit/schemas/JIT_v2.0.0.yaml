openapi: 3.0.3
info:
  version: 2.0.0
  title: |
    DCSA Just in Time Port Calls API
  description: |
    # DCSA OpenAPI specification for Just in Time Port Call process
    The DCSA API for **Just In Time Port Call** aims to simplify and standardize the exchange of operational information between carriers, terminals, port authorities, and service providers, to orchestrate and optimize port calls. JIT can be used for negotiating services execution via timestamps, informing timestamps, or informing moves forecasts, between the parties involved in any given location.

    The planning and execution of events always follow the same pattern, in which several instances of the estimated (`E`), requested (`R`), and planned (`P`) times (from now on referred to as: `ERP`-pattern) can occur if a new estimated or requested time is given after the initially planned time. Some events, specified in this document, do not need the `ERP`-pattern, as they are informative and reflect actuals (`A`) only (i.e. vessel readiness for cargo operations).

    For more information about the ERP-pattern please check [GUIDELINES FOR HARMONIZED COMMUNICATION AND ELECTRONIC EXCHANGE OF OPERATIONAL DATA FOR PORT CALLS](https://wwwcdn.imo.org/localresources/en/OurWork/Facilitation/FAL%20related%20nonmandatory%20documents/FAL.5-Circ.52.pdf) by IMO. Link to IMO GIA [Just In Time Arrival Guide](https://greenvoyage2050.imo.org/wp-content/uploads/2021/01/GIA-just-in-time-hires.pdf)

    ## Port Call Services in the scope of this API
    Negotiable **Port Call Services** through an `ERP`-pattern including an `A`:
    - Berth
    - Cargo operations
    - Pilotage
    - Towage
    - Mooring
    - Bunkering
    - Pilot Boarding Place
    - Anchorage
    - Sludge

    **Non**-negotiable **Port Call Services** (without `ERP`-pattern) having only an `A`:
    - Sea Passage
    - All Fast
    - Gangway down and secure
    - Vessel Ready for cargo operations
    - Vessel Ready to sail
    - Discharge cargo operations
    - Loading cargo operations
    - Lashing
    - Safety - Terminal ready for vessel departure
    - Anchorage Operations
    - ShorePower

    Also in scope:
    - Moves forecast
    - cancel (by provider) or decline (by consumer) of a Port Call Service
    - omission of **Port Call** or **Terminal Call**

    To request a **Port Call Service** the endPoint to use is:

        PUT /v2/port-call-services

    It is the responsibility of the Provider of the initial **Port Call Service** to create a:
    - `portCallID` to identify all communication regarding the **Port Call**
    - `terminalCallID` to identify each **Terminal Call** inside the same `portCallID`. One **Port Call** can contain many **Terminal Calls**
    - `portCallServiceID` to identify each **Port Call Service** inside the same `terminalCallID`. One **Terminal Call** can contain many **Port Call Services**

    It is the responsibility of the creator of a **Timestamp** (Estimated, Requested, Planned or Actual) to create the `timestampID` as an identifier for the **Timestamp** for any further referral.

    ### API Design & Implementation Principles
    This API follows the guidelines defined in version 2.1 of the API Design & Implementation Principles which can be found on the [DCSA Developer page](https://developer.dcsa.org/api_design)

    For a changelog please click [here](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/jit/v2#v200). If you have any questions, feel free to [Contact Us](https://dcsa.org/get-involved/contact-us).
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  contact:
    name: Digital Container Shipping Association (DCSA)
    url: 'https://dcsa.org'
    email: info@dcsa.org
security: []
tags:
  - name: Port Call Service consumer
    description: |
      **Consumer** implemented endPoints
  - name: Port Call Service provider
    description: |
      **Provider** implemented endPoints
  - name: Port Call Service
    description: |
      **Provider** and **Consumer** implemented endPoints
paths:
  '/v2/port-call-services/{portCallServiceID}':
    put:
      parameters:
        - $ref: '#/components/parameters/portCallServiceIDPathParam'
        - $ref: '#/components/parameters/Api-Version-Major'
      tags:
        - Port Call Service consumer
      operationId: put-port-call-service
      summary: Initiates or updates a Port Call Service
      description: |
        Description...
      requestBody:
        description: Start a new Port Call Service
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortCallService'
      responses:
        '204':
          description: |
            A new Port Call Service accepted
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
        '400':
          description: |
            In case creating a new `Port Call Service` fails schema validation a `400` (Bad Request) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                badRequestExample:
                  summary: |
                    Port Call Service missing Vessel object
                  description: |
                    `vessel` is a mandatory property in the `Port Call Service`. This is an example of how the error object would look in case this property is missing

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7003` is just a "random example"
                  value:
                    httpMethod: PUT
                    requestUri: /v2/port-call-services/085a3207-5e45-49cf-8e1b-f8442beaf545
                    statusCode: 400
                    statusCodeText: Bad Request
                    statusCodeMessage: |
                      Vessel object not found - it is a mandatory property in Port Call Service.
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7003
                        property: vessel
                        errorCodeText: mandatory property missing
                        errorCodeMessage: |
                          vessel must be provided as part of a Port Call Service
        '500':
          description: |
            In case a server error occurs in provider system a `500` (Internal Server Error) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internalServerErrorExample:
                  summary: |
                    Internal Server Error while processing Port Call Service
                  description: |
                    An Internal Server Error has occurred - the consumer should contact {provider-support} and provide the `providerCorrelationReference` (in the example this is `4426d965-0dd8-4005-8c63-dc68b01c4962`)

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7003` is just a "random example"
                  value:
                    httpMethod: PUT
                    requestUri: /v2/port-call-services/085a3207-5e45-49cf-8e1b-f8442beaf545
                    statusCode: 500
                    statusCodeText: Internal Server Error
                    statusCodeMessage: |
                      Internal Server Error occurred while processing Port Call Service
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7003
                        errorCodeText: Internal Error occurred
                        errorCodeMessage: Internal Error occurred
        default:
          description: |
            Unexpected error
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/v2/port-call-services':
    get:
      parameters:
        - $ref: '#/components/parameters/portCallIDQueryParam'
        - $ref: '#/components/parameters/transportCallIDQueryParam'
        - $ref: '#/components/parameters/portCallServiceIDQueryParam'

        - $ref: '#/components/parameters/startDateTimeQueryParam'
        - $ref: '#/components/parameters/endDateTimeQueryParam'

        - $ref: '#/components/parameters/UNLocationCodeQueryParameter'
        - $ref: '#/components/parameters/portVisitReferenceQueryParam'
        - $ref: '#/components/parameters/carrierServiceNameQueryParam'
        - $ref: '#/components/parameters/carrierServiceCodeQueryParam'
        - $ref: '#/components/parameters/universalServiceReferenceQueryParam'

        - $ref: '#/components/parameters/transportCallReferenceQueryParam'
        - $ref: '#/components/parameters/transportCallSequenceNumberQueryParam'
        - $ref: '#/components/parameters/carrierImportVoyageNumberQueryParam'
        - $ref: '#/components/parameters/carrierExportVoyageNumberQueryParam'
        - $ref: '#/components/parameters/universalImportVoyageReferenceQueryParam'
        - $ref: '#/components/parameters/universalExportVoyageReferenceQueryParam'
        - $ref: '#/components/parameters/portCallServiceTypeQueryParam'
        - $ref: '#/components/parameters/portCallServiceEventTypeCodeQueryParam'

        - $ref: '#/components/parameters/vesselIMONumberQueryParam'
        - $ref: '#/components/parameters/vesselNameQueryParam'
        - $ref: '#/components/parameters/MMSINumberQueryParam'

        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/cursorQueryParam'
        - $ref: '#/components/parameters/Api-Version-Major'
      tags:
        - Port Call Service
      operationId: get-port-call-services
      summary: Retrieve a list of Port Call Services.
      description: |
        Retrieve a list of Port Call Services.
      responses:
        '200':
          description: |
            Get the list of Port Call Services matching the specified filter(s).
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortCallServices'
        '500':
          description: |
            In case a server error occurs in provider system a `500` (Internal Server Error) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internalServerErrorExample:
                  summary: |
                    Internal Server Error while fetching the Port Call Service
                  description: |
                    An Internal Server Error has occurred - the consumer should contact {provider-support} and provide the `providerCorrelationReference` (in the example this is `4426d965-0dd8-4005-8c63-dc68b01c4962`)

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7003` is just a "random example"
                  value:
                    httpMethod: GET
                    requestUri: /v2/port-call-services/085a3207-5e45-49cf-8e1b-f8442beaf545
                    statusCode: 500
                    statusCodeText: Internal Server Error
                    statusCodeMessage: |
                      Internal Server Error occurred while fetching Port Call Service
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7003
                        errorCodeText: Internal Error occurred
                        errorCodeMessage: Internal Error occurred
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/v2/port-call-services/{portCallServiceID}/timestamp':
    put:
      parameters:
        - $ref: '#/components/parameters/portCallServiceIDPathParam'
        - $ref: '#/components/parameters/Api-Version-Major'
      tags:
        - Port Call Service
      operationId: timestamp
      summary: Timestamp for a Port Call Service
      description: |
        Description...
      requestBody:
        description: Any `ERPA` timestamp
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Timestamp'
      responses:
        '204':
          description: |
            Timestamp for a **Port Call Service** accepted
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
        '400':
          description: |
            In case creating a new `Timestamp` fails schema validation, a `400` (Bad Request) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                badRequestExample:
                  summary: |
                    Timestamp missing portCallServiceID
                  description: |
                    `portCallServiceID` is a mandatory property in the `Timestamp`. This is an example of how the error object would look in case this property is missing

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7003` is just a "random example"
                  value:
                    httpMethod: PUT
                    requestUri: /v2/port-call-services/085a3207-5e45-49cf-8e1b-f8442beaf545/timestamp
                    statusCode: 400
                    statusCodeText: Bad Request
                    statusCodeMessage: |
                      portCallServiceID object not found - it is a mandatory property in Timestamp
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7003
                        property: portCallServiceID
                        errorCodeText: mandatory property missing
                        errorCodeMessage: |
                          portCallServiceID must be provided as part of a Timestamp
        '404':
          description: |
            In case the provider does not know of the `portCallServiceID` used in the request, it is possible for the provider to reject the requests by returning a `404` (Not Found). This could be because of a `PUT` request, for creating/initiating the Port Call Service, that has not finished processing or simply because the resource does not exist.
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFoundExample:
                  summary: |
                    Not Found request
                  description: |
                    The provided `portCallServiceID` cannot be found. This can be because a `PUT` request, for creating/initiating the **Port Call Service**, has not been finished processing or because the `portCallServiceID` does not exist in the provider system.

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7006` is just a "random example"
                  value:
                    httpMethod: PUT
                    requestUri: /v2/port-call-services/085a3207-5e45-49cf-8e1b-f8442beaf545/timestamp
                    statusCode: 404
                    statusCodeText: Not Found
                    statusCodeMessage: |
                      portCallServiceID not found
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-09-04T09:41:00Z'
                    errors:
                      - errorCode: 7006
                        errorCodeText: portCallServiceID Not Found
                        errorCodeMessage: |
                          The Port Call Service does not exist
        '500':
          description: |
            In case a server error occurs in provider system a `500` (Internal Server Error) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internalServerErrorExample:
                  summary: |
                    Internal Server Error while processing Port Call Service
                  description: |
                    An Internal Server Error has occurred - the consumer should contact {provider-support} and provide the `providerCorrelationReference` (in the example this is `4426d965-0dd8-4005-8c63-dc68b01c4962`)

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7005` is just a "random example"
                  value:
                    httpMethod: PUT
                    requestUri: /v2/port-call-services/085a3207-5e45-49cf-8e1b-f8442beaf545/estimated-timestamp
                    statusCode: 500
                    statusCodeText: Internal Server Error
                    statusCodeMessage: |
                      Internal Server Error occurred while processing Port Call Service
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7005
                        errorCodeText: Internal Error occurred
                        errorCodeMessage: Internal Error occurred
        default:
          description: |
            Unexpected error
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/v2/port-call-services/{portCallServiceID}/cancel':
    post:
      parameters:
        - $ref: '#/components/parameters/portCallServiceIDPathParam'
        - $ref: '#/components/parameters/Api-Version-Major'
      tags:
        - Port Call Service consumer
      operationId: cancel-port-call-service
      summary: Cancel a Port Call Service
      description: |
        Provider canceling a **Port Call Service**.
      requestBody:
        description: Cancels a **Port Call Service**
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cancel'
      responses:
        '204':
          description: |
            **Port Call Service** successfully cancelled
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
        '400':
          description: |
            In case cancelling a `Port Call Service` fails schema validation a `400` (Bad Request) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                badRequestExample:
                  summary: |
                    Cancelling a Port Call Service
                  description: |
                    `isFYI` is a boolean property - cannot set the value to '12'. This is an example of how the error object would look in case the value of this property is specified wrongly

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7004` is just a "random example"
                  value:
                    httpMethod: POST
                    requestUri: /v2/port-call-services/085a3207-5e45-49cf-8e1b-f8442beaf545/cancel
                    statusCode: 400
                    statusCodeText: Bad Request
                    statusCodeMessage: |
                      isFYI has wrong type - boolean expected but integer found
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7004
                        property: isFYI
                        errorCodeText: wrong property type
                        errorCodeMessage: |
                          isFYI should be a boolean. '12' provided as value
        '404':
          description: |
            In case the provider does not know of the `portCallServiceID` used in the request (this could be because of a `PUT` request that has not finished processing or simply because the resource does not exist) - it is possible for the provider to reject the requests by returning a `404` (Not Found).
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFoundExample:
                  summary: |
                    Not Found request
                  description: |
                    The provided `portCallServiceID` cannot be found. This can be because a `PUT` request has not been finished processing or because the `portCallServiceID` does not exist in the provider system.

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7006` is just a "random example"
                  value:
                    httpMethod: POST
                    requestUri: /v2/port-call-services/085a3207-5e45-49cf-8e1b-f8442beaf545/cancel
                    statusCode: 404
                    statusCodeText: Not Found
                    statusCodeMessage: |
                      portCallServiceID not found
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-09-04T09:41:00Z'
                    errors:
                      - errorCode: 7006
                        errorCodeText: portCallServiceID Not Found
                        errorCodeMessage: |
                          The Port Call Service does not exist
        '500':
          description: |
            In case a server error occurs in provider system a `500` (Internal Server Error) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internalServerErrorExample:
                  summary: |
                    Internal Server Error while processing Port Call Service
                  description: |
                    An Internal Server Error has occurred - the consumer should contact {provider-support} and provide the `providerCorrelationReference` (in the example this is `4426d965-0dd8-4005-8c63-dc68b01c4962`)

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7005` is just a "random example"
                  value:
                    httpMethod: POST
                    requestUri: /v2/port-call-services/085a3207-5e45-49cf-8e1b-f8442beaf545/cancel
                    statusCode: 500
                    statusCodeText: Internal Server Error
                    statusCodeMessage: |
                      Internal Server Error occurred while processing Port Call Service
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7005
                        errorCodeText: Internal Error occurred
                        errorCodeMessage: Internal Error occurred
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/v2/port-calls/{portCallID}/omit':
    post:
      parameters:
        - $ref: '#/components/parameters/portCallIDPathParam'
        - $ref: '#/components/parameters/Api-Version-Major'
      tags:
        - Port Call Service consumer
      operationId: omit-port-call
      summary: Omits a Port Call
      description: |
        Carrier `OMITTING` a **Port Call**
      requestBody:
        description: |
          Omits a **Port Call**
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OmitPortCall'
      responses:
        '204':
          description: |
            **Port Call** successfully marked as omitted.
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
        '400':
          description: |
            In case omitting a `Port Call` fails schema validation a `400` (Bad Request) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                badRequestExample:
                  summary: |
                    Omitting a Port Call
                  description: |
                    `isFYI` is a boolean property - cannot set the value to '12'. This is an example of how the error object would look in case the value of this property is specified wrongly

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7004` is just a "random example"
                  value:
                    httpMethod: POST
                    requestUri: /v2/port-calls/085a3207-5e45-49cf-8e1b-f8442beaf545/omit
                    statusCode: 400
                    statusCodeText: Bad Request
                    statusCodeMessage: |
                      isFYI has wrong type - boolean expected but integer found
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7004
                        property: isFYI
                        errorCodeText: wrong property type
                        errorCodeMessage: |
                          isFYI should be a boolean. '12' provided as value
        '404':
          description: |
            In case the provider does not know of the `portCallID` used in the request (this could be because of a `PUT` request that has not finished processing or simply because the resource does not exist) - it is possible for the provider to reject the requests by returning a `404` (Not Found).
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFoundExample:
                  summary: |
                    Not Found request
                  description: |
                    The provided `portCallID` cannot be found. This can be because a `PUT` request has not been finished processing or because the `portCallID` does not exist in the provider system.

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7006` is just a "random example"
                  value:
                    httpMethod: POST
                    requestUri: /v2/port-calls/085a3207-5e45-49cf-8e1b-f8442beaf545/omit
                    statusCode: 404
                    statusCodeText: Not Found
                    statusCodeMessage: |
                      portCallID not found
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-09-04T09:41:00Z'
                    errors:
                      - errorCode: 7006
                        errorCodeText: portCallID Not Found
                        errorCodeMessage: |
                          The Port Call Service does not exist
        '500':
          description: |
            In case a server error occurs in provider system a `500` (Internal Server Error) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internalServerErrorExample:
                  summary: |
                    Internal Server Error while processing Port Call Service
                  description: |
                    An Internal Server Error has occurred - the consumer should contact {provider-support} and provide the `providerCorrelationReference` (in the example this is `4426d965-0dd8-4005-8c63-dc68b01c4962`)

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7005` is just a "random example"
                  value:
                    httpMethod: POST
                    requestUri: /v2/port-calls/085a3207-5e45-49cf-8e1b-f8442beaf545/omit
                    statusCode: 500
                    statusCodeText: Internal Server Error
                    statusCodeMessage: |
                      Internal Server Error occurred while processing Port Call Service
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7005
                        errorCodeText: Internal Error occurred
                        errorCodeMessage: Internal Error occurred
        default:
          description: |
            Unexpected error
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/v2/terminal-calls/{terminalCallID}/omit':
    post:
      parameters:
        - $ref: '#/components/parameters/terminalCallIDPathParam'
        - $ref: '#/components/parameters/Api-Version-Major'
      tags:
        - Port Call Service consumer
      operationId: omit-terminal-call
      summary: Omits a Terminal Call
      description: |
        Carrier `OMITTING` a **Terminal Call**
      requestBody:
        description: |
          Omits a **Terminal Call**
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OmitTerminalCall'
      responses:
        '204':
          description: |
            **Terminal Call** successfully marked as omitted.
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
        '400':
          description: |
            In case omitting a `Terminal Call` does not schema validate a `400` (Bad Request) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                badRequestExample:
                  summary: |
                    Omitting a Terminal Call
                  description: |
                    `isFYI` is a boolean property - cannot set the value to '12'. This is an example of how the error object would look in case the value of this property is specified wrongly

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7004` is just a "random example"
                  value:
                    httpMethod: POST
                    requestUri: /v2/terminal-calls/085a3207-5e45-49cf-8e1b-f8442beaf545/omit
                    statusCode: 400
                    statusCodeText: Bad Request
                    statusCodeMessage: |
                      isFYI has wrong type - boolean expected but integer found
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7004
                        property: isFYI
                        errorCodeText: wrong property type
                        errorCodeMessage: |
                          isFYI should be a boolean. '12' provided as value
        '404':
          description: |
            In case the provider does not know of the `terminalCallID` used in the request (this could be because of a `PUT` request that has not finished processing or simply because the resource does not exist) - it is possible for the provider to reject the requests by returning a `404` (Not Found).
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFoundExample:
                  summary: |
                    Not Found request
                  description: |
                    The provided `terminalCallID` cannot be found. This can be because a `PUT` request has not been finished processing or because the `terminalCallID` does not exist in the provider system.

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7006` is just a "random example"
                  value:
                    httpMethod: POST
                    requestUri: /v2/terminal-calls/085a3207-5e45-49cf-8e1b-f8442beaf545/omit
                    statusCode: 404
                    statusCodeText: Not Found
                    statusCodeMessage: |
                      terminalCallID not found
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-09-04T09:41:00Z'
                    errors:
                      - errorCode: 7006
                        errorCodeText: terminalCallID Not Found
                        errorCodeMessage: |
                          The Port Call Service does not exist
        '500':
          description: |
            In case a server error occurs in provider system a `500` (Internal Server Error) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internalServerErrorExample:
                  summary: |
                    Internal Server Error while processing Port Call Service
                  description: |
                    An Internal Server Error has occurred - the consumer should contact {provider-support} and provide the `providerCorrelationReference` (in the example this is `4426d965-0dd8-4005-8c63-dc68b01c4962`)

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7005` is just a "random example"
                  value:
                    httpMethod: POST
                    requestUri: /v2/terminal-calls/085a3207-5e45-49cf-8e1b-f8442beaf545/omit
                    statusCode: 500
                    statusCodeText: Internal Server Error
                    statusCodeMessage: |
                      Internal Server Error occurred while processing Port Call Service
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7005
                        errorCodeText: Internal Error occurred
                        errorCodeMessage: Internal Error occurred
        default:
          description: |
            Unexpected error
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/v2/port-call-services/{portCallServiceID}/decline':
    post:
      parameters:
        - $ref: '#/components/parameters/portCallServiceIDPathParam'
        - $ref: '#/components/parameters/Api-Version-Major'
      tags:
        - Port Call Service provider
      operationId: decline-port-call-service
      summary: Decline a Port Call service
      description: |
        Consumer declining a **Port Call Service**.
      requestBody:
        description: Consumer declining a **Port Call service**
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Decline'
      responses:
        '204':
          description: |
            **Port Call Service** successfully declined
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
        '400':
          description: |
            In case declining a `Port Call Service` fails schema validation a `400` (Bad Request) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                badRequestExample:
                  summary: |
                    Declining a Port Call Service
                  description: |
                    `isFYI` is a boolean property - cannot set the value to '12'. This is an example of how the error object would look in case the value of this property is specified wrongly

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7004` is just a "random example"
                  value:
                    httpMethod: POST
                    requestUri: /v2/port-call-services/085a3207-5e45-49cf-8e1b-f8442beaf545/decline
                    statusCode: 400
                    statusCodeText: Bad Request
                    statusCodeMessage: |
                      isFYI has wrong type - boolean expected but integer found
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7004
                        property: isFYI
                        errorCodeText: wrong property type
                        errorCodeMessage: |
                          isFYI should be a boolean. '12' provided as value
        '404':
          description: |
            In case the provider does not know of the `portCallServiceID` used in the request (this could be because of a `PUT` request that has not finished processing or simply because the resource does not exist) - it is possible for the provider to reject the requests by returning a `404` (Not Found).
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFoundExample:
                  summary: |
                    Not Found request
                  description: |
                    The provided `portCallServiceID` cannot be found. This can be because a `PUT` request has not been finished processing or because the `portCallServiceID` does not exist in the provider system.

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7006` is just a "random example"
                  value:
                    httpMethod: POST
                    requestUri: /v2/port-call-services/085a3207-5e45-49cf-8e1b-f8442beaf545/decline
                    statusCode: 404
                    statusCodeText: Not Found
                    statusCodeMessage: |
                      portCallServiceID not found
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-09-04T09:41:00Z'
                    errors:
                      - errorCode: 7006
                        errorCodeText: portCallServiceID Not Found
                        errorCodeMessage: |
                          The Port Call Service does not exist
        '500':
          description: |
            In case a server error occurs in provider system a `500` (Internal Server Error) is returned
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                internalServerErrorExample:
                  summary: |
                    Internal Server Error while processing Port Call Service
                  description: |
                    An Internal Server Error has occurred - the consumer should contact {provider-support} and provide the `providerCorrelationReference` (in the example this is `4426d965-0dd8-4005-8c63-dc68b01c4962`)

                    **NB**: `errorCode` not yet standardized by DCSA. Value `7005` is just a "random example"
                  value:
                    httpMethod: POST
                    requestUri: /v2/port-call-services/085a3207-5e45-49cf-8e1b-f8442beaf545/decline
                    statusCode: 500
                    statusCodeText: Internal Server Error
                    statusCodeMessage: |
                      Internal Server Error occurred while processing Port Call Service
                    providerCorrelationReference: 4426d965-0dd8-4005-8c63-dc68b01c4962
                    errorDateTime: '2024-11-21T09:41:00Z'
                    errors:
                      - errorCode: 7005
                        errorCodeText: Internal Error occurred
                        errorCodeMessage: Internal Error occurred
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: '#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  headers:
    API-Version:
      schema:
        type: string
        example: 2.0.0
      description: |
        SemVer used to indicate the version of the contract (API version) returned.
  parameters:
    Api-Version-Major:
      in: header
      name: API-Version
      required: false
      schema:
        type: string
        example: '2'
      description: |
        An API-Version header **MAY** be added to the request (optional); if added it **MUST** only contain **MAJOR** version. API-Version header **MUST** be aligned with the URI version.
    ##############
    # Query params
    ##############

    # Technical query parameters

    portCallIDQueryParam:
      in: query
      name: portCallID
      description: |
        The **Port Call Identifier** to filter by. Specifying this filter will only return **Port Call Service** objects including the `portCallID`.
      schema:
        type: string
        format: uuid
        example: 0342254a-5927-4856-b9c9-aa12e7c00563
    transportCallIDQueryParam:
      in: query
      name: transportCallID
      description: |
        The **Transport Call Identifier** to filter by. Specifying this filter will only return **Port Call Service** objects including the `transportCallID`.
      schema:
        type: string
        format: uuid
        example: 0342254a-5927-4856-b9c9-aa12e7c00563
    portCallServiceIDQueryParam:
      in: query
      name: portCallServiceID
      description: |
        The **Port Call Service Identifier** to filter by. Specifying this filter will (at most) return a single **Port Call Service** object including the `portCallServiceID` (if the `portCallServiceID` exists).
      schema:
        type: string
        format: uuid
        example: 0342254a-5927-4856-b9c9-aa12e7c00563

    # Timestamp query parameters

    startDateTimeQueryParam:
      in: query
      name: startDateTime
      description: |
        The **Start Date Time** of the period for which **Port Call Service** information is requested. If a date and time of any **Timestamp** inside a **Port Call Service** matches a date and time on or after (≥) the `startDateTime`, the **Port Call Service** will be included in the result. All matching is done towards local Date and time at the place of the **Port Call Service**. The matched **Timestamp** in the timestamps of the **Port Call Service** must be included in the **Port Call Service** objects returned.
        If this filter is not provided the default value is `3 months` prior to request time.  The value is populated in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) date format.
      schema:
        type: string
        format: date-time
        example: '2020-04-06T07:41:00+08:30'
    endDateTimeQueryParam:
      in: query
      name: endDateTime
      description: |
        The **End Date Time** of the period for which **Port Call Service** information is requested. If a date and time of any **Timestamp** inside a **Port Call Service** matches a date and time on or before (≤) the `endDateTime`, the **Port Call Service** will be included in the result. All matching is done towards local Date and time at the place of the **Port Call Service**. The matched **Timestamp** in the timestamps of the **Port Call Service** must be included in the **Port Call Service** objects returned.
        If this filter is not provided the default value is `6 months` after request time.  The value is populated in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) date format.
      schema:
        type: string
        format: date-time
        example: '2020-04-10T07:41:00+08:30'

    # Port Call query parameters

    UNLocationCodeQueryParameter:
      in: query
      name: UNLocationCode
      description: |
        The **UN Location Code** specifying where a port is located. Specifying this filter will only return **Port Call Service** objects including the `UNLocationCode`.
      schema:
        type: string
        pattern: ^[A-Z]{2}[A-Z2-9]{3}$
        minLength: 5
        maxLength: 5
        example: NLAMS
    portVisitReferenceQueryParam:
      in: query
      name: portVisitReference
      description: |
        The **Port Visit Reference** to filter by. The result will only return **Port Call Service** objects including the `portVisitReference`.
      schema:
        type: string
        maxLength: 50
        example: NLAMS1234589
    carrierServiceNameQueryParam:
      in: query
      name: carrierServiceName
      description: |
        The **Carrier specific Service Name** to filter by. The result will only return **Port Call Service** objects including the `carrierServiceName`.
      schema:
        type: string
        maxLength: 50
        pattern: ^\S(?:.*\S)?$
        example: Great Lion Service
    carrierServiceCodeQueryParam:
      in: query
      name: carrierServiceCode
      description: |
        The **Carrier specific Service Code** to filter by. The result will only return **Port Call Service** objects including the `carrierServiceCode`.
      schema:
        type: string
        maxLength: 11
        pattern: ^\S(?:.*\S)?$
        example: FE1
    universalServiceReferenceQueryParam:
        in: query
        name: universalServiceReference
        description: |
          The **Universal Service Reference** (`USR`) as defined by DCSA to filter by. The result will only return **Port Call Service** objects including the `universalServiceReference`.    
        schema:
          type: string
          pattern: ^SR\d{5}[A-Z]$
          maxLength: 8
          minLength: 8
          example: SR12345A

    # Transport Call query parameters

    transportCallReferenceQueryParam:
      in: query
      name: transportCallReference
      description: |
        The **Transport Call Reference** to filter by. The result will only return **Port Call Service** objects including the `transportCallReference`.
      schema:
        type: string
        maxLength: 100
        example: '15063401'
    transportCallSequenceNumberQueryParam:
      in: query
      name: transportCallSequenceNumber
      description: |
        The **Transport Call Sequence Number** to filter by. The result will only return **Port Call Service** objects including the `transportCallSequenceNumber`.
      schema:
        type: integer
        format: int32
        example: 2
    carrierImportVoyageNumberQueryParam:
      in: query
      name: carrierImportVoyageNumber
      description: |
        The **Carrier Import Voyage Number** to filter by. The result will only return **Port Call Service** objects including the `carrierImportVoyageNumber`.
      schema:
        type: string
        maxLength: 50
        pattern: ^\S(?:.*\S)?$
        example: 2103N
    carrierExportVoyageNumberQueryParam:
      in: query
      name: carrierExportVoyageNumber
      description: |
        The **Carrier Export Voyage Number** to filter by. The result will only return **Port Call Service** objects including the `carrierExportVoyageNumber`.
      schema:
        type: string
        maxLength: 50
        pattern: ^\S(?:.*\S)?$
        example: 2103S
    universalImportVoyageReferenceQueryParam:
      in: query
      name: universalImportVoyageReference
      description: |
        The **Universal Import Voyage Reference** to filter by. The result will only return **Port Call Service** objects including the `universalImportVoyageReference`.
      schema:
        type: string
        pattern: ^\d{2}[0-9A-Z]{2}[NEWSR]$
        minLength: 5
        maxLength: 5
        example: 2103N
    universalExportVoyageReferenceQueryParam:
      in: query
      name: universalExportVoyageReference
      description: |
        The **Universal Export Voyage Reference** to filter by. The result will only return **Port Call Service** objects including the `universalExportVoyageReference`.
      schema:
        type: string
        pattern: ^\d{2}[0-9A-Z]{2}[NEWSR]$
        minLength: 5
        maxLength: 5
        example: 2103N

    # Port Call Service query parameters

    portCallServiceTypeQueryParam:
      in: query
      name: portCallServiceType
      description: |
        The **Port Call Service Type** to filter by. The result will only return **Port Call Service** objects including the `portCallServiceType`.
      schema:
        type: string
        maxLength: 50
        pattern: ^\S(?:.*\S)?$
        example: BERTH
    portCallServiceEventTypeCodeQueryParam:
      in: query
      name: portCallServiceEventTypeCode
      description: |
        The **Port Call Service Event Type Code** to filter by. The result will only return **Port Call Service** objects including the `portCallServiceEventTypeCode`.
      schema:
        type: string
        enum:
          - STRT
          - CMPL
          - ARRI
          - DEPA
        example: STRT

    # Vessel query parameters

    vesselIMONumberQueryParam:
      in: query
      name: vesselIMONumber
      description: |
        The **Vessel IMO Number** to filter by. The result will only return **Port Call Service** objects including the `vesselIMONumber`.
      schema:
        type: string
        pattern: ^\d{7,8}$
        minLength: 7
        maxLength: 8
        example: '9321483'
    vesselNameQueryParam:
      in: query
      name: vesselName
      description: |
        The **Vessel Name** to filter by. The result will only return **Port Call Service** objects including the `vesselName`.
      schema:
        type: string
        pattern: ^\S(?:.*\S)?$
        maxLength: 50
        example: King of the Seas
    MMSINumberQueryParam:
      in: query
      name: MMSINumber
      description: |
        The **MMSI Number** to filter by. The result will only return **Port Call Service** objects including the `MMSINumber`.
      schema:
        type: string
        pattern: ^\d{9}$
        minLength: 9
        maxLength: 9
        example: '278111222'

    # Pagination query parameters

    limitQueryParam:
      in: query
      name: limit
      description: |
        Specifies the maximum number of `Port Call Service` objects to return.
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 100
        example: 100
    cursorQueryParam:
      in: query
      name: cursor
      description: |
        A server generated value to specify a specific point in a collection result, used for pagination.
      schema:
        type: string
        maxLength: 1024
        example: fE9mZnNldHw9MTAmbGltaXQ9MTA

    #############
    # Path params
    #############
    portCallServiceIDPathParam:
      in: path
      name: portCallServiceID
      description: |
        The provider created identifier for the **Port Call Service**
      schema:
        type: string
        format: uuid
        example: 0342254a-5927-4856-b9c9-aa12e7c00563
      required: true
    portCallIDPathParam:
      in: path
      name: portCallID
      description: |
        The provider created identifier for the **Port Call**
      schema:
        type: string
        format: uuid
        example: 0342254a-5927-4856-b9c9-aa12e7c00563
      required: true
    terminalCallIDPathParam:
      in: path
      name: terminalCallID
      description: |
        The provider created identifier for the **Terminal Call**
      schema:
        type: string
        format: uuid
        example: 0342254a-5927-4856-b9c9-aa12e7c00563
      required: true
  schemas:
    ####################
    # Port Call Services
    ####################
    PortCallServices:
      type: array
      description: |
        An array of **Port Call Services** matching the specified filter.
      items:
        $ref: '#/components/schemas/PortCallService'

    ###################
    # Port Call Service
    ###################
    PortCallService:
      type: object
      title: Port Call Service
      description: |
        The **Port Call Service** contains all information about the **Port Call**, the **Terminal Call** within the **Port Call**, the **Vessel** information along with `vesselPosition`, `milesToDestinationPort` and `draft`. Finally it also contains the actual **Port Call Service** specification.
      properties:
        portCall:
          $ref: '#/components/schemas/PortCall'
        terminalCall:
          $ref: '#/components/schemas/TerminalCall'
        vessel:
          $ref: '#/components/schemas/Vessel'
        specification:
          $ref: '#/components/schemas/Specification'
        timestamps:
          type: array
          readOnly: true
          description: |
            An array of timestamps linked to the **Port Call Service**.
          items:
            $ref: '#/components/schemas/Timestamp'
        cancelled:
          type: boolean
          readOnly: true
          description: |
            The **Port Call Service** has been `cancelled` by the Provider.
          example: false
        declined:
          type: boolean
          readOnly: true
          description: |
            The **Port Call Service** has been `declined` by the Consumer.
          example: false
        isFYI:
          type: boolean
          description: |
            If set to `true` it indicates that this message is primarily meant for another party - but is sent as a FYI (for your information).
          example: true
      required:
        - portCall
        - terminalCall
        - vessel
        - specification

    ###########
    # Port Call
    ###########
    PortCall:
      type: object
      title: Port Call
      description: |
        **Port Call** information. The `portCallID` uniquely identifies the **Port Call**. Any subsequent **Port Call Services** linked to the same **Port Call** MUST use the same `portCallID`. An optional `portVisitReference` can be added in order to link the **Port Call** to external systems.
      properties:
        portCallID:
          type: string
          format: uuid
          description: |
            Universal unique identifier for the **Port call**. The `portCallID` is created by the provider. The `portCallID` **MUST** only be created once per **Port Call** - which is the first time a **Port Call Service** is also created. To be used in all communication regarding the **Port Call**.
          example: 0342254a-5927-4856-b9c9-aa12e7c00563
        portVisitReference:
          type: string
          maxLength: 50
          description: |
            The unique reference that can be used to link different **Terminal Calls** to the same port visit. The reference is provided by the port to uniquely identify a **Port Call**.
          example: NLAMS1234589
        carrierServiceName:
          type: string
          maxLength: 50
          pattern: ^\S(?:.*\S)?$
          description: |
            The carrier specific name of the service for which the schedule details are published
          example: Great Lion Service
        carrierServiceCode:
          type: string
          maxLength: 11
          pattern: ^\S(?:.*\S)?$
          description: |
            The carrier specific code of the service for which the schedule details are published.
          example: FE1
        universalServiceReference:
          type: string
          pattern: ^SR\d{5}[A-Z]$
          minLength: 8
          maxLength: 8
          description: |
            A global unique (Vessel-)service reference, as per DCSA standard, agreed by VSA partners for the (Vessel-)service. The (Vessel-)service reference must match the regular expression pattern: `SR\d{5}[A-Z]`. The letters `SR` followed by `5 digits`, followed by a checksum-character as a capital letter from `A to Z`.
          example: SR12345A
        UNLocationCode:
          type: string
          pattern: ^[A-Z]{2}[A-Z2-9]{3}$
          minLength: 5
          maxLength: 5
          description: |
            The UN Location code specifying where the place is located. The pattern used must be

            - 2 characters for the country code using [ISO 3166-1 alpha-2](https://www.iso.org/obp/ui/#iso:pub:PUB500001:en)
            - 3 characters to code a location within that country. Letters A-Z and numbers from 2-9 can be used

            More info can be found here: [UN/LOCODE](https://unece.org/trade/cefact/UNLOCODE-Download)
          example: NLAMS
        omitted:
          type: boolean
          readOnly: true
          description: |
            If set to `true` it indicates that the **Port Call** has been omitted by the carrier
          example: false
      required:
        - portCallID
        - carrierServiceName
        - carrierServiceCode
        - UNLocationCode

    ########################
    # Terminal Call Service
    ########################
    TerminalCall:
      type: object
      title: Terminal Call
      description: |
        **Terminal Call** information. The `terminalCallID` uniquely identifies the **Terminal Call**. Any subsequent **Port Call Services** linked to the same **Terminal Call** MUST use the same `terminalCallID`. An optional `transportCallReference` can be added in order to link the **Terminal Call** to external systems (e.g OVS).
      properties:
        terminalCallID:
          type: string
          format: uuid
          description: |
            Universal unique identifier for the **Terminal Call**. The `terminalCallID` is created by the provider. The `terminalCallID` **MUST** only be created once per **Terminal Call** - which is the first time a **Port Call Service** is also created. To be used in all communication regarding the **Terminal Call**.
          example: 0342254a-5927-4856-b9c9-aa12e7c00563
        transportCallReference:
          type: string
          description: |
            The unique reference for a **Terminal Call**. It’s the vessel operator’s responsibility to provide the **Terminal Call Reference**, other parties are obliged to pick it up and use it.
          maxLength: 100
          example: '15063401'
        transportCallSequenceNumber:
          type: integer
          format: int32
          description: |
            Transport operator's key that uniquely identifies each individual call. This key is essential to distinguish between two separate calls at the same location within one voyage.
          example: 2
        carrierImportVoyageNumber:
          type: string
          maxLength: 50
          pattern: ^\S(?:.*\S)?$
          description: |
            The identifier of an import voyage. The carrier-specific identifier of the import Voyage.
          example: 2103N
        carrierExportVoyageNumber:
          type: string
          maxLength: 50
          pattern: ^\S(?:.*\S)?$
          description: |
            The identifier of an export voyage. The carrier-specific identifier of the export Voyage.
          example: 2103S
        universalImportVoyageReference:
          type: string
          pattern: ^\d{2}[0-9A-Z]{2}[NEWSR]$
          minLength: 5
          maxLength: 5
          description: |
            A global unique voyage reference for the import Voyage, as per DCSA standard, agreed by VSA partners for the voyage. The voyage reference must match the regular expression pattern: `\d{2}[0-9A-Z]{2}[NEWSR]`

            - `2 digits` for the year
            - `2 alphanumeric characters` for the sequence number of the voyage
            - `1 character` for the direction/haul (`N`orth, `E`ast, `W`est, `S`outh or `R`oundtrip).
          example: 2103N
        universalExportVoyageReference:
          type: string
          pattern: ^\d{2}[0-9A-Z]{2}[NEWSR]$
          minLength: 5
          maxLength: 5
          description: |
            A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage. The voyage reference must match the regular expression pattern: `\d{2}[0-9A-Z]{2}[NEWSR]`

            - `2 digits` for the year
            - `2 alphanumeric characters` for the sequence number of the voyage
            - `1 character` for the direction/haul (`N`orth, `E`ast, `W`est, `S`outh or `R`oundtrip).
          example: 2103N
        omitted:
          type: boolean
          readOnly: true
          description: |
            If set to `true` it indicates that the **Terminal Call** has been omitted by the carrier
          example: false
      required:
        - terminalCallID

    ########
    # Vessel
    ########
    Vessel:
      type: object
      title: Vessel
      description: |
        Vessel related to this **Port Call Service**.
      properties:
        vesselIMONumber:
          type: string
          pattern: ^\d{7,8}$
          minLength: 7
          maxLength: 8
          description: |
            The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd's register code, which does not change during the lifetime of the vessel

            **Condition:** One of `vesselIMONumber` or `MMSINumber` **MUST** be specified in order to identify the `Vessel`
          example: '9321483'
        MMSINumber:
          type: string
          description: |
            Maritime Mobile Service Identities (MMSIs) are nine-digit numbers used by maritime digital selective calling (DSC), automatic identification systems (AIS) and certain other equipment to uniquely identify a ship or a coast radio station.

            **Condition:** One of `vesselIMONumber` or `MMSINumber` **MUST** be specified in order to identify the `Vessel`
          pattern: ^\d{9}$
          minLength: 9
          maxLength: 9
          example: '278111222'
        name:
          type: string
          pattern: ^\S(?:.*\S)?$
          maxLength: 50
          description: |
            The name of the Vessel given by the Vessel Operator and registered with IMO.
          example: King of the Seas
        lengthOverall:
          type: number
          format: float
          description: |
            The maximum length of a ship's hull measured parallel to the waterline (Length OverAll).

            If the length is specified in feet (`FOT`) then the decimal part should be considered as a fraction of a foot and **not** as a number of inches. E.g. 120.5 feet means 120 and a half foot (which would be 120'6")
          example: 245.45
        width:
          type: number
          format: float
          description: |
            Overall width of the ship measured at the widest point of the nominal waterline.

            If the width is specified in feet (`FOT`) then the decimal part should be considered as a fraction of a foot and **not** as a number of inches. E.g. 120.5 feet means 120 and a half foot (which would be 120'6")
          example: 37.33
        callSign:
          type: string
          maxLength: 10
          pattern: ^\S(?:.*\S)?$
          description: |
            A unique alphanumeric identity that belongs to the vessel and is assigned by the International Telecommunication Union (ITU). It consists of a three letter alphanumeric prefix that indicates nationality, followed by one to four characters to identify the individual vessel. For instance, vessels registered under Denmark are assigned the prefix ranges 5PA-5QZ, OUAOZZ, and XPA-XPZ. The Call Sign changes whenever a vessel changes its flag.
          example: NCVV
        typeCode:
          type: string
          description: |
            Categorization of ocean-going vessels distinguished by the main cargo the vessel carries. Possible values:
            - `GCGO` (General cargo)
            - `CONT` (Container)
            - `RORO` (RoRo)
            - `CARC` (Car carrier)
            - `PASS` (Passenger)
            - `FERY` (Ferry)
            - `BULK` (Bulk)
            - `TANK` (Tanker)
            - `LGTK` (Liquefied gas tanker)
            - `ASSI` (Assistance)
            - `PILO` (Pilot boat)
          enum:
            - GCGO
            - CONT
            - RORO
            - CARC
            - PASS
            - FERY
            - BULK
            - TANK
            - LGTK
            - ASSI
            - PILO
          example: CONT
        draft:
          type: number
          format: float
          description: |
            The vertical distance between the waterline and the bottom of the hull (keel) of a ship. The depth to which a ship is immersed in water.

            If the draft is specified in feet (`FOT`) then the decimal part should be considered as a fraction of a foot and **not** as a number of inches. E.g. 120.5 feet means 120 and a half foot (which would be 120'6")
          example: 12.5
        airDraft:
          type: number
          format: float
          description: |
            The vertical distance from the surface of the water to the highest point of mast or aerial.

            If the vertical draft is specified in feet (`FOT`) then the decimal part should be considered as a fraction of a foot and **not as a number of inches. E.g. 120.5 feet means 120 and a half foot (which would be 120'6")
          example: 60
        dimensionUnit:
          type: string
          description: |
            The unit of measure which can be expressed in
            - `MTR` (Meter)
            - `FOT` (Foot)
          enum:
            - MTR
            - FOT
          example: MTR
        vesselPosition:
          $ref: '#/components/schemas/VesselPosition'
        milesToDestinationPort:
          type: number
          format: float
          description: |
            Remaining distance reported by the vessel to the next destination port in nautical miles to the berth in that port.
          example: 245.45

    ###############
    # Specification
    ###############
    Specification:
      title: Specification
      type: object
      description: |
        Specification for the **Port Call Service**. The `portCallServiceID` uniquely identifies the **Port Call Service**. Any subsequent  **Timestamps** linked to the same **Port Call Service** MUST use the same `portCallServiceID`.

        The `portCallServiceType` defines what **Port Call Service** is created. `portCallServiceEventTypeCode`, `portCallPhaseTypeCode` and `facilityTypeCode` can further specify the **Port Call Service**.
      properties:
        portCallServiceID:
          type: string
          format: uuid
          description: |
            Universal unique identifier for the **Port Call Service**. The `portCallServiceID` is created by the provider. To be used in all communication regarding the **Port Call Service** (i.e. sending a timestamp with the timestamps endpoint).
          example: 0342254a-5927-4856-b9c9-aa12e7c00563
        portCallServiceType:
          type: string
          maxLength: 50
          pattern: ^\S(?:.*\S)?$
          description: |
            The type of the **Port Call Service**.

            **Port Call Services** negotiable through an `ERP`-pattern including an `A`, can be one of:
            - `BERTH` (Berth)
            - `CARGO_OPERATIONS` (Cargo operations)
            - `PILOTAGE` (Pilotage)
            - `TOWAGE` (Towage)
            - `MOORING` (Mooring)
            - `BUNKERING` (Bunkering)
            - `PILOT_BOARDING_PLACE` (Pilot Boarding Place)
            - `ANCHORAGE` (Anchorage)
            - `SLUDGE`(Sludge)

            **Port Call Services** without `ERP`-pattern having only an `A`, can be one of:

            - `SEA_PASSAGE` (Sea Passage)
            - `ALL_FAST` (All Fast)
            - `GANGWAY_DOWN_AND_SECURE` (Gangway down and secure)
            - `VESSEL_READY_FOR_CARGO_OPERATIONS` (Vessel Ready for cargo operations)
            - `VESSEL_READY_TO_SAIL` (Vessel Ready to sail)
            - `DISCHARGE_CARGO_OPERATIONS` (Discharge cargo operations)
            - `LOADING_CARGO_OPERATIONS` (Loading cargo operations)
            - `LASHING` (Lashing)
            - `SAFETY` (Safety)
            - `ANCHORAGE_OPERATIONS` (Anchorage Operations)
            - `SHORE_POWER` (ShorePower)

            **Port Call Service** without an `ERP` and without an `A`, can be one of:
            - `MOVES` (Moves)
          example: BERTH
        portCallServiceEventTypeCode:
          type: string
          description: |
            The code to identify the type of event that is related to the **Port Call Service**
            - `STRT` (Started)
            - `CMPL` (Completed)
            - `ARRI` (Arrived)
            - `DEPA` (Departed)
          enum:
            - STRT
            - CMPL
            - ARRI
            - DEPA
          example: STRT
        portCallPhaseTypeCode:
          type: string
          description: |
            The general direction of the `Vessel` for which information applies
            - `INBD` (Inbound)
            - `ALGS` (Alongside)
            - `SHIF` (Shifting)
            - `OUTB` (Outbound)
          enum:
            - INBD
            - ALGS
            - SHIF
            - OUTB
          example: ALGS
        facilityTypeCode:
          type: string
          maxLength: 4
          description: |
            A specialized version of the facilityCode to be used in the **Port Call Service**. The code to identify the specific type of facility.
            - `PBPL` (Pilot boarding place)
            - `BRTH` (Berth)
            - `ANCH` (Anchorage Location)
          enum:
            - PBPL
            - BRTH
            - ANCH
          example: BRTH
        portCallServiceLocation:
          $ref: '#/components/schemas/PortCallServiceLocation'
        moves:
          $ref: '#/components/schemas/Moves'
      required:
        - portCallServiceID
        - portCallServiceType
        - portCallServiceEventTypeCode
        - portCallServiceLocation

    #################
    # Vessel position
    #################
    VesselPosition:
      type: object
      title: Vessel Position
      description: |
        The location can be specified using **any** of the nested structures:
        - `UNLocationCode`
        - `facility` (used to specify a location using a `facilityCode` and a `facilityCodeListProvider`)
        - `geoCoordinate` (used to specify a location using `latitude` and `longitude`)

        **Condition:** It is expected that if a location is specified in multiple ways (e.g. both as a `Facility` and as a `GeoCoordinate`) that both ways point to the same location.
      example:
        locationName: CMP Container Terminal Copenhagen
        UNLocationCode: DKCPH
        facility:
          facilityCode: CMPDK
          facilityCodeListProvider: SMDG
      properties:
        locationName:
          type: string
          description: The name of the location.
          pattern: ^\S(?:.*\S)?$
          example: Port of Amsterdam
          maxLength: 100
        facility:
          $ref: '#/components/schemas/Facility'
        UNLocationCode:
          type: string
          pattern: ^[A-Z]{2}[A-Z2-9]{3}$
          minLength: 5
          maxLength: 5
          description: |
            The UN Location code specifying where the place is located. The pattern used must be

            - 2 characters for the country code using [ISO 3166-1 alpha-2](https://www.iso.org/obp/ui/#iso:pub:PUB500001:en)
            - 3 characters to code a location within that country. Letters A-Z and numbers from 2-9 can be used

            More info can be found here: [UN/LOCODE](https://unece.org/trade/cefact/UNLOCODE-Download)
          example: NLAMS
        geoCoordinate:
          $ref: '#/components/schemas/GeoCoordinate'

    ############################
    # Port Call Service Location
    ############################
    PortCallServiceLocation:
      type: object
      title: Port Call Service Location
      description: |
        The location **MUST** be specified as a `UNLocationCode` and can also be specified using **any** of the nested structures:
        - `facility` (used to specify a location using a `facilityCode` and a `facilityCodeListProvider`)
        - `geoCoordinate` (used to specify a location using `latitude` and `longitude`)

        **Condition:** It is expected that if a location is specified in multiple ways (e.g. both as a `Facility` and as a `GeoCoordinate`) that both ways point to the same location.

        **Condition:** this property is **only** to be used in combination with `classifierCode=REQ` (a requested **Timestamp**) and can only be used by a **consumer**
      example:
        locationName: CMP Container Terminal Copenhagen
        UNLocationCode: DKCPH
        facility:
          facilityCode: CMPDK
          facilityCodeListProvider: SMDG
      properties:
        locationName:
          type: string
          description: The name of the location.
          pattern: ^\S(?:.*\S)?$
          example: Port of Amsterdam
          maxLength: 100
        facility:
          $ref: '#/components/schemas/Facility'
        UNLocationCode:
          type: string
          pattern: ^[A-Z]{2}[A-Z2-9]{3}$
          minLength: 5
          maxLength: 5
          description: |
            The UN Location code specifying where the place is located. The pattern used must be

            - 2 characters for the country code using [ISO 3166-1 alpha-2](https://www.iso.org/obp/ui/#iso:pub:PUB500001:en)
            - 3 characters to code a location within that country. Letters A-Z and numbers from 2-9 can be used

            More info can be found here: [UN/LOCODE](https://unece.org/trade/cefact/UNLOCODE-Download)
          example: NLAMS
        geoCoordinate:
          $ref: '#/components/schemas/GeoCoordinate'
      required:
        - UNLocationCode

    ###################
    # Facility Location
    ###################
    Facility:
      title: Facility
      type: object
      description: |
        An object used to express a location using a `Facility`. The facility can be expressed using one of `BIC` code or `SMDG` code. The `facilityCode` does not contain the `UNLocationCode` - this should be provided in the `UnLocationCode` attribute.
      properties:
        facilityCode:
          type: string
          pattern: ^\S(?:.*\S)?$
          maxLength: 6
          description: |
            The code used for identifying the specific facility. This code does not include the UN Location Code.

            The definition of the code depends on the `facilityCodeListProvider`. As code list providers maintain multiple codeLists the following codeList is used:

            - `SMDG` (the codeList used is the [SMDG Terminal Code List](https://smdg.org/documents/smdg-code-lists/))
            - `BIC` (the codeList used is the [BIC Facility Codes](https://www.bic-code.org/facility-codes/))
          example: ADT
        facilityCodeListProvider:
          type: string
          description: |
            The provider used for identifying the facility Code. Some facility codes are only defined in combination with an `UN Location Code`
            - `BIC` (Requires a UN Location Code)
            - `SMDG` (Requires a UN Location Code)
          enum:
            - BIC
            - SMDG
          example: SMDG
        subFacility:
          type: string
          maxLength: 100
          pattern: ^\S(?:.*\S)?$
          description: |
            The position along the line of a berth, specified by one point (e.g. bollard, manifold, ramp number), allowing the ship to berth in the correct position along the berth.
          example: Bollard 20
      required:
        - facilityCode
        - facilityCodeListProvider

    #########################
    # Geo Coordinate Location
    #########################
    GeoCoordinate:
      type: object
      title: Geo Coordinate
      description: |
        An object used to express a location using `latitude` and `longitude`.
      properties:
        latitude:
          type: string
          description: Geographic coordinate that specifies the north–south position of a point on the Earth's surface.
          maxLength: 10
          example: '48.8585500'
        longitude:
          type: string
          description: Geographic coordinate that specifies the east–west position of a point on the Earth's surface.
          maxLength: 11
          example: '2.294492036'
      required:
        - latitude
        - longitude

    ###########
    # Timestamp
    ###########
    Timestamp:
      title: Timestamp
      type: object
      description: |
        Date and time for an `ERP-A` Timestamp when a **Port Call Service** should be provided (for `ERP`) or has been provided (for `A`).
      properties:
        timestampID:
          type: string
          format: uuid
          description: |
            Universally unique identifier for the **Timestamp**. The creator of the **Timestamp** is responsible to create the `timestampID`
          example: 0342254a-5927-4856-b9c9-aa12e7c00563
        replyToTimestampID:
          type: string
          format: uuid
          description: |
            The identifier of the **Timestamp** being replied to. Omitted in case the **Timestamp** is the initial **Timestamp**.

            **Condition:** Only applicable after initial **Timestamp** has been sent.

            **Condition:** Can only reply to a **Timestamp** with the same `portCallServiceID`
          example: 0342254a-5927-4856-b9c9-aa12e7c00563
        portCallServiceID:
          type: string
          format: uuid
          description: |
            Links the timestamp to a **Port Call Service**.
          example: 0342254a-5927-4856-b9c9-aa12e7c00563
        classifierCode:
          type: string
          description: |
            Code for describing the timestamp.

            Possible values are:
            - `ACT` (Actual)
            - `EST` (Estimated)
            - `PLN` (Planned)
            - `REQ` (Requested)

            **Condition:** `EST`, `PLN` and `ACT` are **only** to be used by the **provider** when sending a **Timestamp** to the **consumer**.

            **Condition:** `REQ` is **only** to be used by the **consumer** when sending a **Timestamp** to the **provider**.
          enum:
            - ACT
            - EST
            - PLN
            - REQ
          example: EST
        dateTime:
          type: string
          format: date-time
          description: |
            The local date and time, when the timestamp for a **Port Call Service** should be (or has been) provided, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
          example: '2019-11-12T07:41:00+08:30'
        portCallServiceLocation:
          $ref: '#/components/schemas/PortCallServiceLocation'
        delayReasonCode:
          type: string
          maxLength: 3
          description: |
            Reason code for the delay. See SMDG [Code list DELAY](https://smdg.org/documents/smdg-code-lists/delay-reason-and-port-call-activity/) for a list of valid codes to be used for this attribute.
          example: STR
        isFYI:
          type: boolean
          description: |
            If set to `true` it indicates that this message is primarily meant for another party - but is sent as a FYI (for your information).
          example: true
        remark:
          type: string
          maxLength: 500
          description: |
            Free text to provide additional information on the context.
          example: Port closed due to strike
      required:
        - timestampID
        - portCallServiceID
        - classifierCode
        - dateTime

    ########
    # Cancel
    ########
    Cancel:
      type: object
      title: Cancel
      description: |
        Used by provider to cancel a **Port Call Service**
      properties:
        isFYI:
          type: boolean
          description: |
            If set to `true` it indicates that this message is primarily meant for another party - but is sent as a FYI (for your information).
          example: true
        reason:
          type: string
          maxLength: 500
          description: |
            Free text to provide additional information on the context.
          example: Storms ahead

    #########
    # Decline
    #########
    Decline:
      type: object
      title: Decline
      description: |
        Used by consumer to decline a **Port Call Service**
      properties:
        isFYI:
          type: boolean
          description: |
            If set to `true` it indicates that this message is primarily meant for another party - but is sent as a FYI (for your information).
          example: true
        reason:
          type: string
          maxLength: 500
          description: |
            Free text to provide additional information on the context.
          example: Crane broken

    ######
    # Omit
    ######
    OmitPortCall:
      type: object
      title: Omit Port Call
      description: |
        Used by consumer to omit a **Port Call**
      properties:
        isFYI:
          type: boolean
          description: |
            If set to `true` it indicates that this message is primarily meant for another party - but is sent as a FYI (for your information).
          example: true
        reason:
          type: string
          maxLength: 500
          description: |
            Free text to provide additional information on the context.
          example: Engine failure

    OmitTerminalCall:
      type: object
      title: Omit Terminal Call
      description: |
        Used by consumer to omit a **Terminal Call**
      properties:
        isFYI:
          type: boolean
          description: |
            If set to `true` it indicates that this message is primarily meant for another party - but is sent as a FYI (for your information).
          example: true
        reason:
          type: string
          maxLength: 500
          description: |
            Free text to provide additional information on the context.
          example: Engine failure

    #######
    # Moves
    #######
    Moves:
      type: object
      title: Moves
      description: |
        Forecasted container moves for loading and discharging, empty or laden, at a terminal, covering various types such as Dry, Reefer, Out-of-Gauge (OOG), and Restows. These can be detailed at varying levels of granularity.

        **Condition:** Can only be provided if `portCallServiceType` is `MOVES`
      properties:
        restowMoves:
          type: integer
          format: int32
          description: |
            Forecasted restow moves where containers are off loaded from on board the ship and put back onto the ship either at the same stow position or a different stow position. 
          example: 20
      oneOf:
        - $ref: '#/components/schemas/TotalMoves'
        - $ref: '#/components/schemas/SpecificMoves'

    TotalMoves:
      type: object
      title: Total Moves (Dry + Reefer + OOG)
      additionalProperties: false
      description: |
        Forecasted total container moves for loading and discharging, empty or laden, at a terminal, covering various types such as Dry, Reefer, Out-of-Gauge (OOG)
      properties:
        totalMoves:
          type: integer
          format: int32
          description: |
            Forecasted total container moves for loading and discharging, empty or laden, at a terminal, covering various types such as Dry, Reefer, Out-of-Gauge (OOG)
          example: 155
      required:
        - totalMoves

    SpecificMoves:
      type: object
      title: Specific moves (for load and discharge)
      description: |
        Forecasted moves for loading and discharging, empty or laden, at a terminal, covering various types such as Dry, Reefer, Out-of-Gauge (OOG)
      properties:
        loadMoves:
          $ref: '#/components/schemas/LoadMoves'
        dischargeMoves:
          $ref: '#/components/schemas/DischargeMoves'

    LoadMoves:
      type: object
      title: Load Moves
      description: |
        Forecasted total container moves for loading, empty or laden, at a terminal, covering various types such as Dry, Reefer, Out-of-Gauge (OOG)
      properties:
        ladenContainerMoves:
          $ref: '#/components/schemas/LadenContainerMoves'
        emptyContainerMoves:
          $ref: '#/components/schemas/EmptyContainerMoves'
        reeferPluggedContainerMoves:
          $ref: '#/components/schemas/ReeferPluggedContainerMoves'
        oogUnits:
          type: integer
          format: int32
          description: |
            Forecasted Out-of-gauge (OOG) units
          example: 2
    DischargeMoves:
      type: object
      title: Discharge Moves
      description: |
        Forecasted total container moves for discharging, empty or laden, at a terminal, covering various types such as Dry, Reefer, Out-of-Gauge (OOG)
      properties:
        ladenContainerMoves:
          $ref: '#/components/schemas/LadenContainerMoves'
        emptyContainerMoves:
          $ref: '#/components/schemas/EmptyContainerMoves'
        reeferPluggedContainerMoves:
          $ref: '#/components/schemas/ReeferPluggedContainerMoves'
        oogUnits:
          type: integer
          format: int32
          description: |
            Forecasted Out-of-gauge (OOG) units
          example: 2

    LadenContainerMoves:
      type: object
      title: Laden Container Moves
      description: |
        Forecasted laden containers
      oneOf:
        - $ref: '#/components/schemas/TotalMoves'
        - $ref: '#/components/schemas/ContainerMoves'

    ContainerMoves:
      type: object
      title: Container Moves
      description: |
        Forecasted container moves for 20-foot and 40-foot containers
      properties:
        _20_units:
          type: integer
          format: int32
          description: |
            Forecasted moves of 20-foot containers
          example: 25
        _40_units:
          type: integer
          format: int32
          description: |
            Forecasted moves of 40-foot containers
          example: 30
      required:
        - _20_units
        - _40_units

    EmptyContainerMoves:
      type: object
      title: Empty Container Moves
      description: |
        Forecasted empty containers
      oneOf:
        - $ref: '#/components/schemas/TotalMoves'
        - $ref: '#/components/schemas/ContainerMoves'

    ReeferPluggedContainerMoves:
      type: object
      title: Reefer Plugged Container Moves
      description: |
        Forecasted reefer containers that are plugged
      oneOf:
        - $ref: '#/components/schemas/TotalMoves'
        - $ref: '#/components/schemas/ContainerMoves'

    ################
    # Error Response
    ################
    ErrorResponse:
      title: Error Response
      type: object
      description: Unexpected error
      properties:
        httpMethod:
          description: |
            The HTTP method used to make the request e.g. `GET`, `POST`, etc
          type: string
          example: POST
          enum:
            - GET
            - HEAD
            - POST
            - PUT
            - DELETE
            - OPTION
            - PATCH
        requestUri:
          description: |
            The URI that was requested.
          type: string
          example: /v2/port-call-services/0342254a-5927-4856-b9c9-aa12e7c00563
        statusCode:
          description: |
            The HTTP status code returned.
          type: integer
          format: int32
          example: 400
        statusCodeText:
          description: |
            A standard short description corresponding to the HTTP status code.
          type: string
          maxLength: 50
          example: Bad Request
        statusCodeMessage:
          description: |
            A long description corresponding to the HTTP status code with additional information.
          type: string
          maxLength: 200
          example: The supplied data could not be accepted
        providerCorrelationReference:
          description: |
            A unique identifier to the HTTP request within the scope of the API provider.
          type: string
          maxLength: 100
          example: 4426d965-0dd8-4005-8c63-dc68b01c4962
        errorDateTime:
          description: |
            The DateTime corresponding to the error occurring. Must be formatted using [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
          type: string
          format: date-time
          example: '2024-09-04T09:41:00Z'
        errors:
          type: array
          description: |
            An array of errors providing more detail about the root cause.
          minItems: 1
          items:
            $ref: '#/components/schemas/DetailedError'
      required:
        - httpMethod
        - requestUri
        - statusCode
        - statusCodeText
        - errorDateTime
        - errors
    DetailedError:
      type: object
      title: Detailed Error
      description: |
        A detailed description of what has caused the error.
      properties:
        errorCode:
          type: integer
          format: int32
          description: |
            The detailed error code returned.

              - `7000-7999` Technical error codes
              - `8000-8999` Functional error codes
              - `9000-9999` API provider-specific error codes            

            [Error codes as specified by DCSA](https://developer.dcsa.org/standard-error-codes).
          minimum: 7000
          maximum: 9999
          example: 7003
        property:
          type: string
          maxLength: 100
          description: |
            The name of the property causing the error.
          example: facilityCode
        value:
          type: string
          maxLength: 500
          description: |
            The value of the property causing the error serialised as a string exactly as in the original request.
          example: SG SIN WHS
        jsonPath:
          type: string
          maxLength: 500
          description: |
            A path to the property causing the error, formatted according to [JSONpath](https://github.com/json-path/JsonPath).
          example: $.location.facilityCode
        errorCodeText:
          description: |
            A standard short description corresponding to the `errorCode`.
          type: string
          maxLength: 100
          example: invalidData
        errorCodeMessage:
          type: string
          maxLength: 5000
          description: |
            A long description corresponding to the `errorCode` with additional information.
          example: Spaces not allowed in facility code
      required:
        - errorCodeText
        - errorCodeMessage
