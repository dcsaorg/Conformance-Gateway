---
openapi: "3.0.3"
info:
  title: "DCSA Arrival Notice API"
  description: |
    # DCSA Arrival Notice API

    This is the OpenAPI specification of the **DCSA Arrival Notice** standard.

    The DCSA Arrival Notice standard, including this API, is currently in the design stage and is **not** ready for implementation by adopters yet.
  contact:
    name: "Digital Container Shipping Association (DCSA)"
    url: "https://dcsa.org"
    email: "info@dcsa.org"
  license:
    name: "Apache 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
  version: "1.0.0"
tags:
- name: "AN Publisher Endpoints"
  description: "Endpoints implemented by the adopters who publish arrival notices"
- name: "AN Subscriber Endpoints"
  description: "Endpoints implemented by the adopters who receive arrival notices"
paths:
  /arrival-notices:
    get:
      tags:
      - "AN Publisher Endpoints"
      summary: "Retrieves a list of arrival notices"
      operationId: "get-arrival-notices"
      parameters:
      - name: "transportDocumentReference"
        in: "query"
        description: "Reference of the transport document for which to return the associated arrival notices"
        schema:
          type: "string"
        example: "TDR0123456"
      - name: "equipmentReference"
        in: "query"
        description: "Reference(s) of the equipment for which to return the associated arrival notices"
        schema:
          type: "array"
          items:
            type: "string"
        example: "APZU4812090,APZU4812091"
      - name: "portOfDischarge"
        in: "query"
        description: "UN location of the port of discharge for which to retrieve available arrival notices"
        schema:
          type: "string"
        example: "NLRTM"
      - name: "vesselIMONumber"
        in: "query"
        description: "IMO number of the vessel for which to retrieve available arrival notices"
        schema:
          type: "string"
        example: "12345678"
      - name: "vesselName"
        in: "query"
        description: "Name of the vessel for which to retrieve available arrival notices"
        schema:
          type: "string"
        example: "King of the Seas"
      - name: "carrierImportVoyageNumber"
        in: "query"
        description: "The identifier of an import voyage. The carrier-specific identifier of the import Voyage."
        schema:
          type: "string"
        example: "1234N"
      - name: "universalImportVoyageReference"
        in: "query"
        description: "A global unique voyage reference for the import Voyage, as per DCSA standard, agreed by VSA partners for the voyage."
        schema:
          type: "string"
        example: "2301W"
      - name: "carrierServiceCode"
        in: "query"
        description: "The carrier specific code of the service for which the schedule details are published."
        schema:
          type: "string"
        example: "FE1"
      - name: "universalServiceReference"
        in: "query"
        description: "A global unique service reference, as per DCSA standard, agreed by VSA partners for the service."
        schema:
          type: "string"
        example: "SR12345A"
      - name: "minEtaAtPortOfDischargeDate"
        in: "query"
        description: "Retrieve arrival notices with an ETA at port of discharge on or after this date"
        schema:
          type: "string"
          format: "date"
        example: "2025-01-23"
      - name: "maxEtaAtPortOfDischargeDate"
        in: "query"
        description: "Retrieve arrival notices with an ETA at port of discharge on or before this date"
        schema:
          type: "string"
          format: "date"
        example: "2025-01-23"
      - name: "includeCharges"
        in: "query"
        description: |
          Flag indicating whether to include arrival notice charges. If not specified, the default value is `true`.
          This flag is separate from the mandatory and optional lists of query parameters that can be used as filters
          and can be used in combination with any such filter.
        schema:
          type: "boolean"
        example: true
      responses:
        "200":
          description: "List of arrival notices matching the query parameters"
          headers:
            API-Version:
              $ref: "#/components/headers/API-Version"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrivalNoticesMessage"
    put:
      tags:
      - "AN Subscriber Endpoints"
      summary: "Sends a list of arrival notices"
      operationId: "put-arrival-notices"
      requestBody:
        description: "List of arrival notices"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArrivalNoticesMessage"
        required: true
      responses:
        "204":
          description: "Empty response"
          headers:
            API-Version:
              $ref: "#/components/headers/API-Version"
  /arrival-notice-notifications:
    put:
      tags:
      - "AN Subscriber Endpoints"
      summary: "Sends a list of arrival notice lightweight notifications"
      operationId: "put-arrival-notice-notifications"
      requestBody:
        description: "List of arrival notice lightweight notifications"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArrivalNoticeNotificationsMessage"
        required: true
      responses:
        "204":
          description: "Empty response"
          headers:
            API-Version:
              $ref: "#/components/headers/API-Version"
components:
  schemas:
    ActiveReeferSettings:
      type: "object"
      properties:
        temperatureSetpoint:
          type: "number"
          description: "Target value of the temperature for the Reefer based on the cargo requirement."
          format: "double"
          example: -15
        temperatureUnit:
          type: "string"
          description: |
            The unit for temperature in Celsius or Fahrenheit

            - `CEL` (Celsius)
            - `FAH` (Fahrenheit)

            **Condition:** Mandatory to provide if `temperatureSetpoint` is provided
          example: "CEL"
        o2Setpoint:
          maximum: 100
          minimum: 0
          type: "number"
          description: "The percentage of the controlled atmosphere O<sub>2</sub> target value"
          format: "double"
          example: 25
        co2Setpoint:
          maximum: 100
          minimum: 0
          type: "number"
          description: "The percentage of the controlled atmosphere CO<sub>2</sub> target value"
          format: "double"
          example: 25
        humiditySetpoint:
          maximum: 100
          minimum: 0
          type: "number"
          description: "The percentage of the controlled atmosphere humidity target value"
          format: "double"
          example: 95.6
        airExchangeSetpoint:
          minimum: 0
          type: "number"
          description: |
            Target value for the air exchange rate which is the rate at which outdoor air replaces indoor air within a Reefer container
          format: "double"
          example: 15.4
        airExchangeUnit:
          type: "string"
          description: |
            The unit for `airExchange` in metrics- or imperial- units per hour
            - `MQH` (Cubic metre per hour)
            - `FQH` (Cubic foot per hour)

            **Condition:** Mandatory to provide if `airExchange` is provided
          example: "MQH"
        isVentilationOpen:
          type: "boolean"
          description: "If `true` the ventilation orifice is `Open` - if `false` the ventilation orifice is `closed`"
          example: true
        isDrainholesOpen:
          type: "boolean"
          description: "Is drain holes open on the container"
          example: true
        isBulbMode:
          type: "boolean"
          description: "Is special container setting for handling flower bulbs active"
          example: true
        isColdTreatmentRequired:
          type: "boolean"
          description: "Indicator whether cargo requires cold treatment prior to loading at origin or during transit, but prior arrival at POD"
          example: true
        isControlledAtmosphereRequired:
          type: "boolean"
          description: "Indicator of whether cargo requires Controlled Atmosphere."
          example: true
      description: "The specifications for a Reefer equipment. Only applicable when `isNonOperatingReefer` is false."
    CargoGrossVolume:
      type: "object"
      properties:
        value:
          minimum: 0
          exclusiveMinimum: true
          type: "number"
          description: |
            Calculated by multiplying the width, height, and length of the packed cargo. A maximum of 4 decimals should be provided.
          format: "double"
          example: 2.4
        unit:
          type: "string"
          description: |
            The unit of measure which can be expressed in imperial or metric terms:
            - `FTQ` (Cubic foot)
            - `MTQ` (Cubic meter)
          example: "MTQ"
      description: "Calculated by multiplying the width, height, and length of the packed cargo."
    CargoGrossWeight:
      type: "object"
      properties:
        value:
          minimum: 0
          exclusiveMinimum: true
          type: "number"
          description: |
            The weight of the cargo item including packaging being carried in the container. Excludes the tare weight of the container. A maximum of 3 decimals should be provided.
          format: "double"
          example: 2400
        unit:
          type: "string"
          description: |
            The unit of measure which can be expressed in imperial or metric terms:
            - `KGM` (Kilograms)
            - `LBR` (Pounds)
          example: "KGM"
      description: "The weight of the cargo item including packaging, excluding the tare weight of the container."
    CargoItem:
      type: "object"
      properties:
        equipmentReference:
          maxLength: 11
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: |
            The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.
            According to [ISO 6346](https://www.iso.org/standard/83558.html), a container identification code consists of a 4-letter prefix and a 7-digit number (composed of a 3-letter owner code, a category identifier, a serial number, and a check-digit).

            If a container does not comply with [ISO 6346](https://www.iso.org/standard/83558.html), it is suggested to follow [Recommendation #2: Containers with non-ISO identification](https://smdg.org/documents/smdg-recommendations) from SMDG.
          example: "APZU4812090"
        cargoGrossWeight:
          $ref: "#/components/schemas/CargoGrossWeight"
        cargoGrossVolume:
          $ref: "#/components/schemas/CargoGrossVolume"
        cargoNetWeight:
          $ref: "#/components/schemas/CargoNetWeight"
        cargoNetVolume:
          $ref: "#/components/schemas/CargoNetVolume"
        exportLicense:
          $ref: "#/components/schemas/ExportLicense"
        importLicense:
          $ref: "#/components/schemas/ImportLicense"
        outerPackaging:
          $ref: "#/components/schemas/OuterPackaging"
        nationalCommodityCodes:
          type: "array"
          description: "A list of `National Commodity Codes` that apply to this `cargoItem`"
          items:
            $ref: "#/components/schemas/NationalCommodityCode"
        customsReferences:
          type: "array"
          description: "A list of `Customs references`"
          items:
            $ref: "#/components/schemas/CustomsReference"
      description: "A cargoItem is the smallest unit used in stuffing. It cannot be split across containers."
    CargoNetVolume:
      type: "object"
      properties:
        value:
          minimum: 0
          exclusiveMinimum: true
          type: "number"
          description: |
            Calculated by multiplying the width, height, and length of the cargo, excluding packaging.
          format: "double"
          example: 2.4
        unit:
          type: "string"
          description: |
            The unit of measure which can be expressed in imperial or metric terms:
            - `FTQ` (Cubic foot)
            - `MTQ` (Cubic meter)
          example: "MTQ"
      description: "Volume of the cargo excluding packaging. Calculated by multiplying width, height, and length."
    CargoNetWeight:
      type: "object"
      properties:
        value:
          minimum: 0
          exclusiveMinimum: true
          type: "number"
          description: |
            The weight of the cargo item excluding packaging being carried in the container. Excludes the tare weight of the container. A maximum of 3 decimals should be provided.
          format: "double"
          example: 2400
        unit:
          type: "string"
          description: |
            The unit of measure which can be expressed in imperial or metric terms:
            - `KGM` (Kilograms)
            - `LBR` (Pounds)
          example: "KGM"
      description: "The weight of the cargo item excluding packaging and container tare weight."
    Charge:
      type: "object"
      properties:
        chargeName:
          maxLength: 50
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: "Free text field describing the charge to apply"
          example: "Documentation fee - Destination"
        currencyAmount:
          minimum: 0
          type: "number"
          description: |
            The monetary value of all freight and other service charges for a transport document, with a maximum of 2-digit decimals.
          format: "double"
          example: 1012.12
        currencyCode:
          maxLength: 3
          minLength: 3
          pattern: "^[A-Z]{3}$"
          type: "string"
          description: |
            The currency for the charge, using a 3-character code ([ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)).
          example: "DKK"
        paymentTermCode:
          type: "string"
          description: |
            An indicator of whether a charge is prepaid (PRE) or collect (COL). When prepaid, the charge is the responsibility of the shipper or the Invoice payer on behalf of the shipper (if provided). When collect, the charge is the responsibility of the consignee or the Invoice payer on behalf of the consignee (if provided).

            - `PRE` (Prepaid)
            - `COL` (Collect)
          example: "PRE"
          enum:
          - "PRE"
          - "COL"
        calculationBasis:
          maxLength: 50
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: |
            The code specifying the measure unit used for the corresponding unit price for this cost, such as per day, per ton, per square metre.
          example: "Per day"
        unitPrice:
          minimum: 0
          type: "number"
          description: "The unit price of this charge item in the currency of the charge."
          format: "double"
          example: 3456.6
        quantity:
          minimum: 0
          type: "number"
          description: "The amount of unit for this charge item."
          format: "double"
          example: 34.4
      description: "Addresses the monetary value of freight and other service charges for a `Booking`."
    ConsignmentItem:
      type: "object"
      properties:
        carrierBookingReference:
          maxLength: 35
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: "The associated booking number provided by the carrier for this `Consignment Item`."
          example: "ABC709951"
        descriptionOfGoods:
          type: "array"
          description: |
            A plain language description that is precise enough for Customs services to be able to identify the goods. General terms (i.e. 'consolidated', 'general cargo' 'parts' or 'freight of all kinds') or not sufficiently precise description cannot be accepted.

            **Condition:** The order of the items in this array **MUST** be preserved as by the provider of the API.
          items:
            type: "string"
            description: |
              A plain language description that is precise enough for Customs services to be able to identify the goods. General terms (i.e. 'consolidated', 'general cargo' 'parts' or 'freight of all kinds') or not sufficiently precise description cannot be accepted.

              **Condition:** The order of the items in this array **MUST** be preserved as by the provider of the API.
        HSCodes:
          type: "array"
          description: "A list of `HS Codes` that apply to this `consignmentItem`"
          items:
            type: "string"
            description: "A list of `HS Codes` that apply to this `consignmentItem`"
        nationalCommodityCodes:
          type: "array"
          description: "A list of `National Commodity Codes` that apply to this `commodity`"
          items:
            $ref: "#/components/schemas/NationalCommodityCode"
        shippingMarks:
          type: "array"
          description: |
            A list of the `ShippingMarks` applicable to this `consignmentItem`

            **Condition:** The order of the items in this array **MUST** be preserved as by the provider of the API.
          items:
            type: "string"
            description: |
              A list of the `ShippingMarks` applicable to this `consignmentItem`

              **Condition:** The order of the items in this array **MUST** be preserved as by the provider of the API.
        cargoItems:
          type: "array"
          description: "A list of all `cargoItems`"
          items:
            $ref: "#/components/schemas/CargoItem"
        exportLicense:
          $ref: "#/components/schemas/ExportLicense"
        importLicense:
          $ref: "#/components/schemas/ImportLicense"
        references:
          type: "array"
          description: "A list of `References`"
          items:
            $ref: "#/components/schemas/ReferenceConsignmentItem"
        customsReferences:
          type: "array"
          description: "A list of `Customs references`"
          items:
            $ref: "#/components/schemas/CustomsReference"
      description: "Defines a list of `CargoItems` belonging together and the associated `Booking`. A `ConsignmentItem` can be split across multiple containers by referencing multiple `CargoItems`."
    CustomsReference:
      type: "object"
      properties:
        type:
          maxLength: 50
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: "The reference type code as defined in the relevant customs jurisdiction."
          example: "CUS"
        countryCode:
          maxLength: 2
          minLength: 2
          pattern: "^[A-Z]{2}$"
          type: "string"
          description: |
            The 2 characters for the country code using [ISO 3166-1 alpha-2](https://www.iso.org/obp/ui/#iso:pub:PUB500001:en)
          example: "NL"
        values:
          minItems: 1
          type: "array"
          items:
            maxLength: 35
            pattern: "^\\S(?:.*\\S)?$"
            type: "string"
            description: "The value(s) of the customs reference."
            example: "4988470982020120017"
      description: |-
        Reference associated with customs and/or excise purposes required by relevant authorities for the import, export, or transit of goods.

        Examples include:
        - UCR (Unique Consignment Reference)
        - ACID (Advance Cargo Info Declaration in Egypt)
        - ITN (Internal Transaction Number in the US)
    DangerousGoods:
      type: "object"
      properties:
        UNNumber:
          maxLength: 4
          minLength: 4
          pattern: "^\\d{4}$"
          type: "string"
          description: |
            United Nations Dangerous Goods Identifier (UNDG) assigned by the UN Sub-Committee of Experts on the Transport of Dangerous Goods and shown in the IMO IMDG.
          example: "1463"
        NANumber:
          maxLength: 4
          minLength: 4
          pattern: "^\\d{4}$"
          type: "string"
          description: |
            Four-digit number that is assigned to dangerous, hazardous, and harmful substances by the United States Department of Transportation.
          example: "9037"
        codedVariantList:
          maxLength: 4
          minLength: 4
          pattern: "^[0-3][0-9A-Z]{3}$"
          type: "string"
          description: |
            Four-character code supplied by Exis Technologies that assists to remove ambiguities when identifying a variant within a single UN number or NA number that may occur when two companies exchange DG information.

            Character | Valid Characters | Description
            :--------:|------------------|------------
            1| 0, 1, 2, 3|The packing group. Code 0 indicates there is no packing group
            2|0 to 9 and A to Z|A sequence letter for the PSN, or 0 if there were no alternative PSNs
            3 and 4|0 to 9 and A to Z|Two sequence letters for other information, for the cases where the variant is required because of different in subrisks, packing instruction etc.
          example: "2200"
        properShippingName:
          maxLength: 250
          type: "string"
          description: "The proper shipping name for goods under IMDG Code, or the product name for goods under IBC Code and IGC Code, or the bulk cargo shipping name for goods under IMSBC Code, or the name of oil for goods under Annex I to the MARPOL Convention."
          example: "Chromium Trioxide, anhydrous"
        technicalName:
          maxLength: 250
          type: "string"
          description: "The recognized chemical or biological name or other name currently used for the referenced dangerous goods as described in chapter 3.1.2.8 of the IMDG Code."
          example: "xylene and benzene"
        imoClass:
          maxLength: 4
          type: "string"
          description: |
            The hazard class code of the referenced dangerous goods according to the specified regulation. Examples of possible values are:

            - `1.1A` (Substances and articles which have a mass explosion hazard)
            - `1.6N` (Extremely insensitive articles which do not have a mass explosion hazard)
            - `2.1` (Flammable gases)
            - `8` (Corrosive substances)
          example: "1.4S"
        subsidiaryRisk1:
          maxLength: 3
          minLength: 1
          pattern: "^[0-9](\\.[0-9])?$"
          type: "string"
          description: "Any risk in addition to the class of the referenced dangerous goods according to the IMO IMDG Code."
          example: "1.2"
        subsidiaryRisk2:
          maxLength: 3
          minLength: 1
          pattern: "^[0-9](\\.[0-9])?$"
          type: "string"
          description: "Any risk in addition to the class of the referenced dangerous goods according to the IMO IMDG Code."
          example: "1.2"
        isMarinePollutant:
          type: "boolean"
          description: "Indicates if the goods belong to the classification of Marine Pollutant."
          example: false
        packingGroup:
          maximum: 3
          minimum: 1
          type: "integer"
          description: "The packing group according to the UN Recommendations on the Transport of Dangerous Goods and IMO IMDG Code."
          format: "int32"
          example: 3
        isLimitedQuantity:
          type: "boolean"
          description: "Indicates if the dangerous goods can be transported as limited quantity in accordance with Chapter 3.4 of the IMO IMDG Code."
          example: false
        isExceptedQuantity:
          type: "boolean"
          description: "Indicates if the dangerous goods can be transported as excepted quantity in accordance with Chapter 3.5 of the IMO IMDG Code."
          example: false
        isSalvagePackings:
          type: "boolean"
          description: "Indicates if the cargo has special packaging for the transport, recovery or disposal of damaged, defective, leaking or nonconforming hazardous materials packages, or hazardous materials that have spilled or leaked."
          example: false
        isEmptyUncleanedResidue:
          type: "boolean"
          description: "Indicates if the cargo is residue."
          example: false
        isWaste:
          type: "boolean"
          description: "Indicates if waste is being shipped"
          example: false
        isHot:
          type: "boolean"
          description: "Indicates if high temperature cargo is shipped."
          example: false
        isCompetentAuthorityApprovalRequired:
          type: "boolean"
          description: "Indicates if the cargo require approval from authorities"
          example: false
        competentAuthorityApproval:
          maxLength: 70
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: "Name and reference number of the competent authority providing the approval."
          example: "{Name and reference...}"
        segregationGroups:
          type: "array"
          description: |
            List of the segregation groups applicable to specific hazardous goods according to the IMO IMDG Code.

            **Condition:** only applicable to specific hazardous goods.
          items:
            type: "string"
            description: |
              List of the segregation groups applicable to specific hazardous goods according to the IMO IMDG Code.

              **Condition:** only applicable to specific hazardous goods.
        innerPackagings:
          type: "array"
          description: "A list of `Inner Packings` contained inside this `outer packaging/overpack`."
          items:
            $ref: "#/components/schemas/InnerPackaging"
        emergencyContactDetails:
          $ref: "#/components/schemas/EmergencyContactDetails"
        EMSNumber:
          maxLength: 7
          type: "string"
          description: |
            The emergency schedule identified in the IMO EmS Guide – Emergency Response Procedures for Ships Carrying Dangerous Goods. Comprises 2 values; 1 for spillage and 1 for fire. Possible values spillage: S-A to S-Z. Possible values fire: F-A to F-Z.
          example: "F-A S-Q"
        endOfHoldingTime:
          type: "string"
          description: "Date by when the refrigerated liquid needs to be delivered."
          format: "date"
          example: "2021-09-03T00:00:00.000+00:00"
        fumigationDateTime:
          type: "string"
          description: "Date & time when the container was fumigated"
          format: "date-time"
          example: "2024-09-04T09:41:00Z"
        isReportableQuantity:
          type: "boolean"
          description: |
            Indicates if a container of hazardous material is at the reportable quantity level. If `true`, a report to the relevant authority must be made in case of spill.
          example: false
        inhalationZone:
          maxLength: 1
          minLength: 1
          type: "string"
          description: |
            The zone classification of the toxicity of the inhalant. Possible values are:

            - `A` (Hazard Zone A) can be assigned to specific gases and liquids
            - `B` (Hazard Zone B) can be assigned to specific gases and liquids
            - `C` (Hazard Zone C) can **only** be assigned to specific gases
            - `D` (Hazard Zone D) can **only** be assigned to specific gases
          example: "A"
        grossWeight:
          $ref: "#/components/schemas/GrossWeight"
        netWeight:
          $ref: "#/components/schemas/NetWeight"
        netExplosiveContent:
          $ref: "#/components/schemas/NetExplosiveContent"
        netVolume:
          $ref: "#/components/schemas/NetVolume"
        limits:
          $ref: "#/components/schemas/Limits"
      description: "Specification for `Dangerous Goods`. It is mandatory to provide one of `UNNumber` or `NANumber`. Dangerous Goods is based on **IMDG Amendment Version 41-22**."
    EmergencyContactDetails:
      type: "object"
      properties:
        contact:
          maxLength: 255
          type: "string"
          description: "Name of the Contact person during an emergency."
          example: "Henrik Larsen"
        provider:
          maxLength: 255
          type: "string"
          description: "Name of the third party vendor providing emergency support"
          example: "GlobeTeam"
        phone:
          maxLength: 30
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: |
            Phone number for the contact. Phone **MUST** include an international phone number format as defined in the [ITU-T recommendation E.123](https://www.itu.int/rec/T-REC-E.123/en).
          example: "+45 70262970"
        referenceNumber:
          maxLength: 255
          type: "string"
          description: "Contract reference for the emergency support provided by an external third party vendor."
          example: "12234"
      description: "24 hr emergency contact details"
    Equipment:
      type: "object"
      properties:
        equipmentReference:
          maxLength: 11
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: |
            The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.
            According to [ISO 6346](https://www.iso.org/standard/83558.html), a container identification code consists of a 4-letter prefix and a 7-digit number (composed of a 3-letter owner code, a category identifier, a serial number, and a check-digit).

            If a container does not comply with [ISO 6346](https://www.iso.org/standard/83558.html), it is suggested to follow [Recommendation #2: Containers with non-ISO identification](https://smdg.org/documents/smdg-recommendations) from SMDG.
          example: "APZU4812090"
        ISOEquipmentCode:
          maxLength: 4
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: |
            Unique code for the different equipment size and type used to transport commodities. The code can refer to one of ISO size type (e.g. 22G1) or ISO type group (e.g. 22GP) following the [ISO 6346](https://www.iso.org/standard/83558.html) standard.
          example: "22G1"
        tareWeight:
          $ref: "#/components/schemas/TareWeight"
      description: "Used for storing cargo during transport. Equipment size/type is defined by the ISO 6346 code. Common sizes include 20'/40'/45' containers."
    ExportLicense:
      type: "object"
      properties:
        isRequired:
          type: "boolean"
          description: |
            Information provided by the shipper to indicate whether an `Export License` or permit is required for this shipment/commodity/destination.

            **Note:** If this property is omitted, it may be interpreted differently by different API providers and by the same API provider in different contexts.
          example: true
        reference:
          maxLength: 35
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: |
            Reference number assigned to an `Export License` or permit, which authorizes a business or individual to export specific goods to specific countries under defined conditions. It is a permit that is required when shipping certain restricted or controlled goods, such as military equipment, high-tech items, chemicals, or items subject to international regulations. The `Export License` must be valid at time of departure.
          example: "EMC007123"
        issueDate:
          type: "string"
          description: "Issue date of the `Export License`."
          format: "date"
          example: "2024-09-14T00:00:00.000+00:00"
        expiryDate:
          type: "string"
          description: "Expiry date of the `Export License`."
          format: "date"
          example: "2024-09-21T00:00:00.000+00:00"
      description: |-
        `Export License` requirements.

        Condition: Included if the property is provided in the `Shipping Instructions.`
    GrossWeight:
      type: "object"
      properties:
        value:
          minimum: 0
          exclusiveMinimum: true
          type: "number"
          description: |
            The grand total weight of the DG cargo and weight per `UNNumber`/`NANumber` including packaging items being carried, which can be expressed in imperial or metric terms, as provided by the shipper.
          format: "double"
          example: 12000.3
        unit:
          type: "string"
          description: |
            The unit of measure which can be expressed in imperial or metric terms:
            - `KGM` (Kilograms)
            - `LBR` (Pounds)
          example: "KGM"
      description: "Total weight of the goods carried, including packaging."
    ImportLicense:
      type: "object"
      properties:
        isRequired:
          type: "boolean"
          description: |
            Information provided by the shipper to indicate whether an `Import License` or permit is required for this shipment/commodity/destination.

            **Note:** If this property is omitted, it may be interpreted differently by different API providers and by the same API provider in different contexts.
          example: true
        reference:
          maxLength: 35
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: |
            Reference number assigned to an `Import License` or permit, issued by countries exercising import controls that authorizes the importation of the articles stated in the license. The `Import License` must be valid at time of arrival.
          example: "EMC007123"
        issueDate:
          type: "string"
          description: "Issue date of the `Import License`."
          format: "date"
          example: "2024-09-14T00:00:00.000+00:00"
        expiryDate:
          type: "string"
          description: "Expiry date of the `Import License`."
          format: "date"
          example: "2024-09-21T00:00:00.000+00:00"
      description: |-
        `Import License` requirements.

        Condition: Included if the property is provided in the `Shipping Instructions.`
    InnerPackaging:
      type: "object"
      properties:
        quantity:
          type: "integer"
          description: "Count of `Inner Packagings` of the referenced `Dangerous Goods`."
          format: "int32"
          example: 20
        material:
          maxLength: 100
          type: "string"
          description: "The `material` used for the `Inner Packaging` of the referenced `Dangerous Goods`."
          example: "Plastic"
        description:
          maxLength: 100
          type: "string"
          description: "Description of the packaging."
          example: "Woven plastic water resistant Bag"
      description: "Object for inner packaging specification."
    Limits:
      type: "object"
      properties:
        temperatureUnit:
          type: "string"
          description: |
            The unit for **all attributes in the limits structure** in Celsius or Fahrenheit

            - `CEL` (Celsius)
            - `FAH` (Fahrenheit)
          example: "CEL"
        flashPoint:
          type: "number"
          description: |
            Lowest temperature at which a chemical can vaporize to form an ignitable mixture in air.

            **Condition:** only applicable to specific hazardous goods according to the IMO IMDG Code.
          format: "double"
          example: 42.0
        transportControlTemperature:
          type: "number"
          description: |
            Maximum temperature at which certain substance (such as organic peroxides and self-reactive and related substances) can be safely transported for a prolonged period.
          format: "double"
          example: 24.1
        transportEmergencyTemperature:
          type: "number"
          description: "Temperature at which emergency procedures shall be implemented"
          format: "double"
          example: 74.1
        SADT:
          type: "number"
          description: "Lowest temperature in which self-accelerating decomposition may occur in a substance"
          format: "double"
          example: 54.1
        SAPT:
          type: "number"
          description: "Lowest temperature in which self-accelerating polymerization may occur in a substance"
          format: "double"
          example: 70.0
      description: "Limits for the `Dangerous Goods`. The same `Temperature Unit` must apply to all attributes in this structure."
    NationalCommodityCode:
      type: "object"
      properties:
        type:
          maxLength: 10
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: |
            The national commodity classification code, which can be one of the following values defined by DCSA:
            - `NCM` (Nomenclatura Comum do Mercosul)
            - `HTS` (Harmonized Tariff Schedule)
            - `SCHEDULE_B` ( Schedule B)
            - `TARIC` (Integrated Tariff of the European Communities)
            - `CN` (Combined Nomenclature)
            - `CUS` (Customs Union and Statistics)
          example: "NCM"
        countryCode:
          maxLength: 2
          minLength: 2
          pattern: "^[A-Z]{2}$"
          type: "string"
          description: |
            The 2 characters for the country code using [ISO 3166-1 alpha-2](https://www.iso.org/obp/ui/#iso:pub:PUB500001:en)
          example: "BR"
        values:
          type: "array"
          description: "A list of `national commodity codes` values."
          items:
            type: "string"
            description: "A list of `national commodity codes` values."
      description: "The national commodity classification code linked to a country with a value. Examples: NCM (Brazil), HTS (US), TARIC (EU)."
    NetExplosiveContent:
      type: "object"
      properties:
        value:
          minimum: 0
          exclusiveMinimum: true
          type: "number"
          description: |
            The total weight of the explosive substances, without the packaging’s, casings, etc.
          format: "double"
          example: 2.4
        unit:
          type: "string"
          description: |
            The unit of measure which can be expressed in imperial or metric terms:
            - `KGM` (Kilograms)
            - `LBR` (Pounds)
            - `GRM` (Grams)
            - `ONZ` (Ounce)
          example: "KGM"
      description: "The total weight of the explosive substances, without the packaging, casings, etc."
    NetVolume:
      type: "object"
      properties:
        value:
          minimum: 0
          exclusiveMinimum: true
          type: "number"
          description: "The volume of the referenced dangerous goods."
          format: "double"
          example: 2.4
        unit:
          type: "string"
          description: |
            The unit of measure which can be expressed in imperial or metric terms:
            - `FTQ` (Cubic foot)
            - `MTQ` (Cubic meter)
            - `LTR` (Litre)
          example: "MTQ"
      description: "The volume of the referenced dangerous goods. Only applicable to liquids and gas."
    NetWeight:
      type: "object"
      properties:
        value:
          minimum: 0
          exclusiveMinimum: true
          type: "number"
          description: "Total weight of the goods carried, excluding packaging."
          format: "double"
          example: 2.4
        unit:
          type: "string"
          description: |
            The unit of measure which can be expressed in imperial or metric terms:
            - `KGM` (Kilograms)
            - `LBR` (Pounds)
          example: "KGM"
      description: "Total weight of the goods carried, excluding packaging."
    OuterPackaging:
      type: "object"
      properties:
        packageCode:
          maxLength: 2
          minLength: 2
          pattern: "^[A-Z0-9]{2}$"
          type: "string"
          description: |
            A code identifying the outer packaging/overpack. `PackageCode` must follow the codes specified in [Recommendation N°21](https://unece.org/trade/uncefact/cl-recommendations)

            **Condition:** only applicable to dangerous goods if the `IMO packaging code` is not available.
          example: "5H"
        imoPackagingCode:
          maxLength: 5
          minLength: 1
          pattern: "^[A-Z0-9]{1,5}$"
          type: "string"
          description: |
            The code of the packaging as per IMO.

            **Condition:** only applicable to dangerous goods if specified in the [IMO IMDG code](https://www.imo.org/en/publications/Pages/IMDG%20Code.aspx). If not available, the `packageCode` as per UN recommendation 21 should be used.
          example: "1A2"
        numberOfPackages:
          maximum: 99999999
          minimum: 1
          type: "integer"
          description: "Specifies the number of outer packagings/overpacks associated with this `Cargo Item`."
          format: "int32"
          example: 18
        description:
          maxLength: 100
          type: "string"
          description: "Description of the outer packaging/overpack."
          example: "Drum, steel"
        woodDeclaration:
          maxLength: 30
          type: "string"
          description: |
            Property to clearly indicate if the products, packaging and any other items are made of wood. Possible values include:
            - `NOT_APPLICABLE` (if no wood or any other wood product such as packaging and supports are being shipped)
            - `NOT_TREATED_AND_NOT_CERTIFIED` (if the wood or wooden materials have not been treated nor fumigated and do not include a certificate)
            - `PROCESSED` (if the wood or wooden materials are entirely made of processed wood, such as plywood, particle board, sliver plates of wood and wood laminate sheets produced using glue, heat, pressure or a combination of these)
            - `TREATED_AND_CERTIFIED` (if the wood or wooden materials have been treated and/or fumigated and include a certificate)
          example: "TREATED_AND_CERTIFIED"
        dangerousGoods:
          type: "array"
          description: "A list of `Dangerous Goods`"
          items:
            $ref: "#/components/schemas/DangerousGoods"
      description: "Outer packaging or overpack specification, such as palletized or crated groupings of packages."
    ReferenceConsignmentItem:
      type: "object"
      properties:
        type:
          maxLength: 3
          type: "string"
          description: |
            The reference type codes defined by DCSA. Possible values are:
            - `CR` (Customer’s Reference)
            - `AKG` (Vehicle Identification Number)
            - `SPO` (Shipper's Purchase Order)
            - `CPO` (Consignee's Purchase Order)
          example: "CR"
        values:
          type: "array"
          description: "List of `referenceValues` for a given `referenceType`."
          items:
            type: "string"
            description: "List of `referenceValues` for a given `referenceType`."
      description: "References for a consignment item, used by shippers or freight forwarders and shared in events or printed on documents."
    Seal:
      type: "object"
      properties:
        number:
          maxLength: 15
          type: "string"
          description: "Identifies a seal affixed to the container."
          example: "VET123"
        source:
          type: "string"
          description: |
            The source of the seal, namely who has affixed the seal.
            - `CAR` (Carrier)
            - `SHI` (Shipper)
            - `VET` (Veterinary)
            - `CUS` (Customs)

            **Condition:** Seal source may be required depending on the type of commodity being shipped.
          example: "CUS"
      description: "Seal-related information associated with shipment equipment. A seal is affixed once the equipment is loaded and remains until final destination."
    TareWeight:
      type: "object"
      properties:
        value:
          minimum: 0
          exclusiveMinimum: true
          type: "number"
          description: "The weight of an empty container (gross container weight)."
          format: "double"
          example: 4800
        unit:
          type: "string"
          description: |
            The unit of measure which can be expressed in imperial or metric terms
            - `KGM` (Kilograms)
            - `LBR` (Pounds)
          example: "KGM"
      description: "The weight of an empty container (gross container weight)."
    UtilizedTransportEquipment:
      type: "object"
      properties:
        equipment:
          $ref: "#/components/schemas/Equipment"
        isShipperOwned:
          type: "boolean"
          description: "Indicates whether the container is shipper owned (SOC)."
          example: true
        isNonOperatingReefer:
          type: "boolean"
          description: |
            If the equipment is a Reefer Container then setting this attribute will indicate that the container should be treated as a `DRY` container.

            **Condition:** Only applicable if `ISOEquipmentCode` shows a Reefer type.
          example: false
        activeReeferSettings:
          $ref: "#/components/schemas/ActiveReeferSettings"
        shippingMarks:
          type: "array"
          description: |
            A list of the `ShippingMarks` applicable to this `UtilizedTransportEquipment`

            **Condition:** The order of the items in this array **MUST** be preserved as by the provider of the API.
          items:
            type: "string"
            description: |
              A list of the `ShippingMarks` applicable to this `UtilizedTransportEquipment`

              **Condition:** The order of the items in this array **MUST** be preserved as by the provider of the API.
        seals:
          type: "array"
          description: "A list of `Seals`"
          items:
            $ref: "#/components/schemas/Seal"
        references:
          type: "array"
          description: "A list of `References`"
          items:
            $ref: "#/components/schemas/Reference"
        customsReferences:
          type: "array"
          description: "A list of `Customs references`"
          items:
            $ref: "#/components/schemas/CustomsReference"
      description: "Specifies the container (`equipment`), total `weight`, `volume`, possible `ActiveReeferSettings`, `seals` and `references`."
    Address:
      type: "object"
      properties:
        street:
          maxLength: 70
          type: "string"
          description: "Street"
          example: "Example St."
        streetNumber:
          maxLength: 50
          type: "string"
          description: "Street number"
          example: "123"
        floor:
          maxLength: 50
          type: "string"
          description: "Floor"
          example: "2nd"
        postCode:
          maxLength: 10
          type: "string"
          description: "Post code"
          example: "1234 AB"
        poBox:
          maxLength: 20
          type: "string"
          description: "P.O. box"
          example: "12345"
        city:
          maxLength: 35
          type: "string"
          description: "City"
          example: "Amsterdam"
        stateRegion:
          maxLength: 65
          type: "string"
          description: "State or region"
          example: "North Holland"
        countryCode:
          maxLength: 2
          minLength: 2
          pattern: "^[A-Z]{2}$"
          type: "string"
          description: |
            The 2 characters for the country code using [ISO 3166-1 alpha-2](https://www.iso.org/obp/ui/#iso:pub:PUB500001:en)

            When the country code is required but not applicable, use the code `ZZ`.
          example: "NL"
      description: "Address information"
    ArrivalNotice:
      required:
      - "cargoMovementTypeAtDestination"
      - "carrierCode"
      - "carrierCodeListProvider"
      - "carrierContactInformation"
      - "consignmentItems"
      - "deliveryTypeAtDestination"
      - "documentParties"
      - "isElectronic"
      - "issueDateTime"
      - "termsAndConditions"
      - "transport"
      - "transportDocumentReference"
      - "transportDocumentTypeCode"
      - "utilizedTransportEquipments"
      type: "object"
      properties:
        issueDateTime:
          type: "string"
          description: "The date and time when the Arrival Notice was issued."
          format: "date-time"
          example: "2025-01-23T01:23:45Z"
        label:
          maxLength: 1000
          type: "string"
          description: |
            Free text used to indicate a certain version or type of arrival notice,
            for example "Warning", "Updated", "Second", "Third" etc.
          example: "Warning"
        carrierCode:
          maxLength: 4
          pattern: "^\\S+$"
          type: "string"
          description: |-
            Code in the list provided by `carrierCodeListProvider` of the carrier publishing the Arrival Notice

            Specifying attribute 'carrierCodeListProvider' requires specifying attribute 'carrierCode'.
          example: "HLCU"
        carrierCodeListProvider:
          type: "string"
          description: |-
            The provider of the code list in which `carrierCode` is defined.
             * `SMDG` - Ship Message Design Group
             * `NMFTA` - National Motor Freight Traffic Association; includes SPLC (Standard Point Location Code)

            Specifying attribute 'carrierCodeListProvider' requires specifying attribute 'carrierCode'.
          example: "NMFTA"
        carrierContactInformation:
          type: "array"
          description: "ATTRIBUTE The party to contact for any inquiries related to this Arrival Notice."
          items:
            $ref: "#/components/schemas/ContactInformation"
        carrierInformationForCargoRelease:
          type: "array"
          description: |
            The party to contact in relation to the cargo release (e.g. a shipping agency other than the POD carrier agency).
          items:
            $ref: "#/components/schemas/ContactInformation"
        pickupLocation:
          $ref: "#/components/schemas/Location"
        returnLocation:
          $ref: "#/components/schemas/Location"
        returnInstructions:
          maxLength: 500
          type: "string"
          description: "Return instructions"
          example: "Please place the container..."
        customsImportDeclarationProcedure:
          maxLength: 1000
          type: "string"
          description: "Customs import declaration procedure"
          example: "The tax must be declared..."
        additionalInformation:
          maxLength: 500
          type: "string"
          description: |
            Free text field to provide additional required information for the consignee to prepare for the shipment arrival,
            e.g. additional required documents to prepare and present for shipment release - country specific.
          example: "FIRMS code: B986"
        references:
          type: "array"
          description: |
            References provided by the shipper or freight forwarder at the time of Booking or at the time of providing
            Shipping Instructions. Carriers share them back when providing Track & Trace event updates, some are also printed
            on the B/L. Customers can use these references to track shipments in their internal systems.
          items:
            $ref: "#/components/schemas/Reference"
        transportDocumentReference:
          maxLength: 20
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: "Reference of the transport document for which this arrival notice was created"
          example: "XYZ1234"
        transportDocumentTypeCode:
          type: "string"
          description: |-
            Type of the transport document for which this arrival notice was created
             * `BOL` - Bill of Lading
             * `SWB` - Sea Waybill
          example: "BOL"
        isElectronic:
          type: "boolean"
          description: |
            Flag indicating whether the transport document for which this arrival notice was created is electronically transferred
          example: true
        deliveryTypeAtDestination:
          type: "string"
          description: |-
            Code representing the delivery type offered at destination
             * `CY` - Container yard (including rail ramp)
             * `SD` - Store Door
             * `CFS` - Container Freight Station
          example: "CY"
        cargoMovementTypeAtDestination:
          type: "string"
          description: |-
            Code indicating whether at destination the unloaded cargo occupies an entire container (FCL)
            or shares the container with other shipments (LCL).

             * `FCL` - Full Container Load
             * `LCL` - Less than Container Load
          example: "FCL"
        serviceContractNumber:
          maxLength: 100
          type: "string"
          description: |
            Reference number for agreement between shipper and carrier, which optionally includes a certain minimum
            quantity commitment (usually referred as "MQC") of cargo that the shipper commits to over a fixed period,
            and the carrier commits to a certain rate or rate schedule.
          example: "SCN12345"
        termsAndConditions:
          maxLength: 50000
          type: "string"
          description: "Carrier terms and conditions of transport."
          example: "Any reference in..."
        carrierClauses:
          type: "array"
          description: "List of carrier clauses"
          items:
            maxLength: 20000
            type: "string"
            description: |
              Clause for a specific shipment added by the carrier, subject to local rules / guidelines
              or certain mandatory information required to be shared with the customer.
            example: "It is not allowed to..."
        documentParties:
          type: "array"
          description: "Document parties"
          items:
            $ref: "#/components/schemas/DocumentParty"
        transport:
          $ref: "#/components/schemas/Transport"
        freeTime:
          type: "array"
          description: "List of free time conditions applicable to this shipment at destination"
          items:
            $ref: "#/components/schemas/FreeTime"
        charges:
          type: "array"
          description: "List of charges applicable to this shipment"
          items:
            $ref: "#/components/schemas/Charge"
        payerCode:
          maxLength: 100
          type: "string"
          description: |
            Name identifying the entity responsible for freight payment.
          example: "Acme Inc."
        utilizedTransportEquipments:
          type: "array"
          description: "The equipments being used."
          items:
            $ref: "#/components/schemas/UtilizedTransportEquipment"
        consignmentItems:
          type: "array"
          description: "The list of consignment items in the shipment."
          items:
            $ref: "#/components/schemas/ConsignmentItem"
        arrivalNoticeVisualization:
          $ref: "#/components/schemas/EmbeddedDocument"
      description: "Full content of an Arrival Notice document."
    ArrivalNoticeNotification:
      required:
      - "etaAtPortOfDischargeDate"
      - "issueDateTime"
      - "portOfDischarge"
      - "transportDocumentReference"
      type: "object"
      properties:
        issueDateTime:
          type: "string"
          description: "The date and time when the Arrival Notice was issued."
          format: "date-time"
          example: "2025-01-23T01:23:45Z"
        label:
          maxLength: 1000
          type: "string"
          description: |
            Free text used to indicate a certain version or type of arrival notice,
            for example "Warning", "Updated", "Second", "Third" etc.
          example: "Warning"
        transportDocumentReference:
          maxLength: 20
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: |
            Reference of the transport document for which this arrival notice was created
          example: "XYZ1234"
        equipmentReferences:
          type: "array"
          description: |
            References of the equipments for which this arrival notice was created
          items:
            maxLength: 11
            minLength: 1
            pattern: "^\\S(?:.*\\S)?$"
            type: "string"
            description: |
              The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.

              According to ISO 6346, a container identification code consists of a 4-letter prefix and a 7-digit number
              (composed of a 3-letter owner code, a category identifier, a serial number, and a check-digit).

              If a container does not comply with ISO 6346, it is suggested to follow
              [Recommendation #2: Containers with non-ISO identification](https://smdg.org/documents/smdg-recommendations)
              from SMDG.
            example: "APZU4812090"
        portOfDischarge:
          $ref: "#/components/schemas/Location"
        etaAtPortOfDischargeDate:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: "string"
          description: |
            The expected date of arrival of the vessel at the port of discharge
          example: "2025-01-23"
        placeOfDelivery:
          $ref: "#/components/schemas/Location"
        etaAtPlaceOfDeliveryDate:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: "string"
          description: |
            The expected date of arrival of the shipment at place of delivery
          example: "2025-01-23"
      description: |
        Lightweight notification that can be sent when a new or updated Arrival Notice is available
    ArrivalNoticeNotificationsMessage:
      type: "object"
      properties:
        arrivalNoticeNotifications:
          type: "array"
          description: "List of Arrival Notice lightweight notifications."
          items:
            $ref: "#/components/schemas/ArrivalNoticeNotification"
      description: "API message containing a list of Arrival Notice lightweight notifications."
    ArrivalNoticesMessage:
      type: "object"
      properties:
        arrivalNotices:
          type: "array"
          description: "List of arrival notices."
          items:
            $ref: "#/components/schemas/ArrivalNotice"
      description: "API message containing a list of Arrival Notices."
    ContactInformation:
      type: "object"
      properties:
        name:
          maxLength: 100
          pattern: "^\\S+(\\s+\\S+)*$"
          type: "string"
          description: "Contact name"
          example: "Jane Doe"
        phone:
          maxLength: 30
          pattern: "^\\S+(\\s+\\S+)*$"
          type: "string"
          description: |-
            Phone number

            At least one of these attributes is required: 'phone', 'email'.
          example: "+1 555-123-4567"
        email:
          maxLength: 100
          pattern: "^\\S+(\\s+\\S+)*$"
          type: "string"
          description: |-
            Email address

            At least one of these attributes is required: 'phone', 'email'.
          example: "jane.doe@example.com"
      description: "Contact information"
    DocumentParty:
      required:
      - "name"
      - "partyType"
      type: "object"
      properties:
        partyType:
          type: "string"
          description: |-
            Code indicating the type of a document party
             * `SHIPPER` - The party by whom or in whose name or on whose behalf a contract of carriage of goods by sea has been concluded with a
            carrier, or any person by whom or in whose name, or on whose behalf, the goods are actually delivered to the carrier
            in relation to the contract of carriage by sea.

             * `CONSIGNEE` - The party to which goods are consigned.
             * `FIRST_NOTIFY_PARTY` - The first party to be notified of the shipment arrival.
             * `SECOND_NOTIFY_PARTY` - The second party to be notified of the shipment arrival.
             * `OTHER_NOTIFY_PARTY` - Other party to be notified of the shipment arrival.
          example: "SHIPPER"
        name:
          maxLength: 70
          type: "string"
          description: "Party name"
          example: "Acme Inc."
        personType:
          type: "string"
          description: |
            One of the person types defined by the Union Customs Code art. 5(4)

             * `NATURAL_PERSON` - A person that is an individual living human being

             * `LEGAL_PERSON` - Person (including a human being and public or private organizations) that can perform legal actions,
            such as own a property, sue and be sued

             * `ASSOCIATION_OF_PERSONS` - Not a legal person, but recognised under Union or National law as having the capacity to perform legal acts
          example: "LEGAL_PERSON"
        address:
          $ref: "#/components/schemas/Address"
        identifyingCodes:
          type: "array"
          description: "List of codes identifying the party"
          items:
            $ref: "#/components/schemas/IdentifyingPartyCode"
        taxOrLegalReferences:
          type: "array"
          description: "List of tax or legal references relevant to the party"
          items:
            $ref: "#/components/schemas/TaxOrLegalReference"
        contactDetails:
          type: "array"
          description: "Party contact details"
          items:
            $ref: "#/components/schemas/ContactInformation"
      description: "Document party"
    EmbeddedDocument:
      required:
      - "content"
      - "name"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Document name"
          example: "20250123 AN XYZ01234.docx"
        content:
          type: "string"
          description: "Base64 representation of the binary document content"
          example: "RXhhbXBsZSBBTiBjb250ZW50"
        contentType:
          type: "string"
          description: "Content type of document"
          example: "application/msword"
          default: "application/pdf"
      description: "Name, Base64-encoded content and content type of an embedded document"
    FreeTime:
      required:
      - "calculationBasis"
      - "duration"
      - "isoEquipmentCode"
      - "timeUnit"
      - "typeCode"
      type: "object"
      properties:
        typeCode:
          type: "string"
          description: |-
            Code used to denote the type of free time.
             * `DEM` - Demurrage
             * `DET` - Detention
             * `PDM` - Per Diem
             * `STO` - Storage
          example: "DEM"
        isoEquipmentCode:
          maxLength: 4
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: |
            Unique code identifying the equipment size and type used to transport commodities.
            The code can refer to either the ISO size type (e.g. 22G1) or the ISO type group (e.g. 22GP)
            following the [ISO 6346](https://en.wikipedia.org/wiki/ISO_6346) standard.
          example: "22GP"
        duration:
          type: "integer"
          description: "The duration expressed in `timeUnit`s for which this free time item applies."
          format: "int32"
          example: 123
        timeUnit:
          maxLength: 3
          type: "string"
          description: |-
            Code identifying the unit in which free time is expressed
             * `CD` - Calendar days
             * `WD` - Working days
             * `HR` - Hours
          example: "WD"
        calculationBasis:
          maxLength: 1000
          type: "string"
          description: |
            Description of the conditions under which this free time item applies.
            It can include references to the carrier website or individual charges as per service contract/agreement.
          example: "Calculated as..."
      description: "Free time condition applicable to this shipment at destination."
    IdentifyingPartyCode:
      required:
      - "codeListProvider"
      - "partyCode"
      type: "object"
      properties:
        codeListProvider:
          type: "string"
          description: |-
            Code of the provider of the code list from which a party code is used.

             * `BOLE` - Bolero
             * `CARX` - CargoX
             * `DCSA` - Digital Container Shipping Association
             * `DNB` - Dun and Bradstreet
             * `EDOX` - EdoxOnline
             * `ESSD` - EssDOCS
             * `ETEU` - eTEU
             * `FMC` - Federal Maritime Commission
             * `GSBN` - Global Shipping Business Network
             * `GLEIF` - Global Legal Entity Identifier Foundation
             * `IDT` - ICE Digital Trade
             * `IQAX` - IQAX
             * `SECR` - Secro
             * `TRGO` - TradeGO
             * `W3C` - World Wide Web Consortium
             * `WAVE` - Wave
             * `WISE` - WiseTech
             * `ZZZ` - Mutually defined
          example: "W3C"
        codeListName:
          type: "string"
          description: |
            The name of the `partyCode` list, code generation mechanism or code authority from the `codeListProvider`.

            This is a very limited list of examples:
             * DID (Decenbtralized Identifier) for `codeListProvider` W3C
             * LEI (Legal Entity Identifier) for `codeListProvider` GLEIF
             * DUNS (Data Universal Numbering System) for `codeListProvider` DNB
          example: "DID"
        partyCode:
          type: "string"
          description: "Identifier of the party in the list `codeListName` provided by `codeListProvider`"
          example: "MSK"
      description: "Identifying code for a party"
    Location:
      type: "object"
      properties:
        locationName:
          maxLength: 100
          type: "string"
          description: "Location name"
          example: "Port of Amsterdam"
        address:
          $ref: "#/components/schemas/Address"
        unLocationCode:
          maxLength: 5
          minLength: 5
          pattern: "^[A-Z]{2}[A-Z2-9]{3}$"
          type: "string"
          description: |
            The UN Location code identifying a certain location. The pattern used must be:
            * 2 characters for the country code using ISO 3166-1 alpha-2
            * 3 characters to code a location within that country (using letters A-Z and numbers from 2-9)

            Additional information can be found [here](https://unece.org/trade/cefact/UNLOCODE-Download).
          example: "NLAMS"
        facilityCode:
          maxLength: 6
          pattern: "^\\S(?:.*\\S)?$"
          type: "string"
          description: "Facility code in the list provided by `facilityCodeListProvider`"
          example: "CTA"
        facilityCodeListProvider:
          type: "string"
          description: |-
            The provider of the code list in which `facilityCode` is defined.
             * `BIC` - BIC Facility Codes; details [here](https://www.bic-code.org/facility-codes/)
             * `SMDG` - Ship Message Design Group; details [here](https://www.bic-code.org/facility-codes/)
          example: "BIC"
      description: "Location information"
    Reference:
      required:
      - "referenceType"
      - "value"
      type: "object"
      properties:
        referenceType:
          maxLength: 3
          type: "string"
          description: |
            One of the reference type codes defined by DCSA. Possible values are:
             * FF (Freight Forwarder's Reference)
             * SI (Shipper's Reference)
             * SPO (Shippers Purchase Order Reference)
             * CPO (Consignees Purchase Order Reference)
             * CR (Customer's Reference)
             * AAO (Consignee's Reference)
             * ECR (Empty container release reference)
             * CSI (Customer shipment ID)
             * BPR (Booking party reference number)
             * BID (Booking Request ID)
             * SAC (Shipping Agency Code)
          example: "FF"
        value:
          maxLength: 100
          type: "string"
          description: "Reference value"
          example: "XYZ1234"
      description: |
        Reference used by customers to track shipment within their own systems.
    TaxOrLegalReference:
      required:
      - "countryCode"
      - "referenceType"
      - "value"
      type: "object"
      properties:
        referenceType:
          maxLength: 50
          type: "string"
          description: "The reference type code as defined by the relevant tax and/or legal authority."
          example: "PAN"
        countryCode:
          maxLength: 2
          minLength: 2
          pattern: "^[A-Z]{2}$"
          type: "string"
          description: |
            The 2 characters for the country code using [ISO 3166-1 alpha-2](https://www.iso.org/obp/ui/#iso:pub:PUB500001:en)

            When the country code is required but not applicable, use the code `ZZ`.
          example: "NL"
        value:
          maxLength: 35
          type: "string"
          description: "The name or title of the tax or legal reference"
          example: "ABC1234"
      description: |
        Reference that uniquely identifies a party for tax and/or legal purposes in accordance with the relevant jurisdiction.

        This is a limited list of examples:

        | Type  | Country | Description |
        |-------|:-------:|-------------|
        |EORI|NL|Economic Operators Registration and Identification|
        |PAN|IN|Goods and Services Tax Identification Number in India|
        |GSTIN|IN|Goods and Services Tax Identification Number in India|
        |IEC|IN|Importer-Exported Code in India|
        |RUC|EC|Registro Único del Contribuyente in Ecuador|
        |RUC|PE|Registro Único del Contribuyente in Peru|
        |NIF|MG|Numéro d'Identification Fiscal in Madagascar|
        |NIF|DZ|Numéro d'Identification Fiscal in Algeria|
    Transport:
      required:
      - "departureDate"
      - "etaAtPortOfDischargeDate"
      - "portOfDischarge"
      - "portOfLoading"
      type: "object"
      properties:
        onBoardDate:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: "string"
          description: |
            The date when the container was loaded onto the vessel at the port of origin.
          example: "2025-01-23"
        departureDate:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: "string"
          description: |
            The date of departure from the location where the cargo is handed over by the shipper, or his agent,
            to the shipping line. This can refer either to the Place of Receipt or the Port of Loading.
          example: "2025-01-23"
        plannedDepartureDate:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: "string"
          description: |
            The expected date of departure of the first mother vessel arriving at the destination country.
          example: "2025-01-23"
        plannedArrivalDate:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: "string"
          description: |
            The expected date of arrival of the first mother vessel arriving at the destination country.
          example: "2025-01-23"
        etaAtPortOfDischargeDate:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: "string"
          description: "The expected date of arrival of the vessel at the Port of Discharge."
          example: "2025-01-23"
        etaAtPlaceOfDeliveryDate:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: "string"
          description: "The expected date of arrival of the shipment at Place of Delivery."
          example: "2025-01-23"
        inlandArrivalDate:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: "string"
          description: |
            The date when the container reaches its inland destination (e.g., a warehouse or rail terminal).
          example: "2025-01-23"
        estimatedGeneralOrderDateTime:
          type: "string"
          description: |
            The estimated date and time when the shipment will be placed under General Order status
            (shipment is transferred to a bonded warehouse, and additional fees or penalties may apply).
          format: "date-time"
          example: "2025-01-23T01:23:45Z"
        loadLocation:
          $ref: "#/components/schemas/Location"
        dischargeLocation:
          $ref: "#/components/schemas/Location"
        portOfLoading:
          $ref: "#/components/schemas/Location"
        portOfDischarge:
          $ref: "#/components/schemas/Location"
        placeOfReceipt:
          $ref: "#/components/schemas/Location"
        placeOfDelivery:
          $ref: "#/components/schemas/Location"
        modeOfTransport:
          maxLength: 20
          type: "string"
          description: |-
            Code defined by DCSA to identify a mode of transport.

             * `VESSEL` - Vessel
             * `RAIL` - Rail
             * `TRUCK` - Truck
             * `BARGE` - Barge
             * `MULTIMODAL` - Multimodal
          example: "VESSEL"
        vesselVoyages:
          maxItems: 3
          minItems: 1
          type: "array"
          items:
            $ref: "#/components/schemas/VesselVoyage"
      description: "Transport info"
    VesselVoyage:
      required:
      - "carrierVoyageNumber"
      - "typeCode"
      - "vesselName"
      type: "object"
      properties:
        typeCode:
          type: "string"
          description: |-
            Code representing the type of a vessel voyage.

             * `DC` - Destination country
             * `POD` - Port of destination
             * `POL` - Port of loading
          example: "POD"
        vesselName:
          maxLength: 50
          type: "string"
          description: "Vessel name"
          example: "King of the Seas"
        vesselFlag:
          maxLength: 2
          minLength: 2
          pattern: "^[A-Z]{2}$"
          type: "string"
          description: "Vessel flag"
          example: "NL"
        vesselIMONumber:
          maxLength: 8
          minLength: 7
          pattern: "^\\d{7,8}$"
          type: "string"
          description: |
            The unique reference for a registered vessel, which remains unchanged throughout the entire lifetime of the vessel.
            The reference is the International Maritime Organisation (IMO) number,
            also sometimes known as the Lloyd's register code.
          example: "12345678"
        carrierVoyageNumber:
          maxLength: 50
          type: "string"
          description: |
            Carrier-specific identifier of a voyage:
            * the import voyage (if `typeCode` is `POD` or `DC`)
            * the export voyage (if `typeCode` is `POL`)
          example: "1234N"
        universalVoyageReference:
          maxLength: 5
          minLength: 5
          pattern: "^\\d{2}[0-9A-Z]{2}[NEWSR]$"
          type: "string"
          description: |
            Universal identifier of a voyage:
            * the import voyage (if `typeCode` is `POD` or `DC`)
            * the export voyage (if `typeCode` is `POL`)
          example: "2301W"
      description: |
        Details of a vessel voyage.

        When `typeCode` is `POL` (port of loading), these are the details of
        the first sea going vessel where the container was initially loaded.

        When `typeCode` is `POD` (port of destination), these are the details of
        the last sea-going vessel arriving at the Port of Discharge,
        which can be either a feeder or the mother vessel.

        When `typeCode` is `DC` (destination country), these are the details of
        the first mother vessel arriving at the destination country.
    Volume:
      required:
      - "unit"
      - "value"
      type: "object"
      properties:
        value:
          pattern: "^\\d+(\\.\\d+)?$"
          type: "string"
          description: "The volume expressed in the selected `unit`"
          example: "123.456"
        unit:
          type: "string"
          description: |-
            The unit in which the volume `value` is expressed
             * `FTQ` - Cubic feet
             * `LTR` - Litres
             * `MTQ` - Cubic meters
          example: "MTQ"
      description: "Representation of a volume including the unit in which it is expressed."
    Weight:
      required:
      - "unit"
      - "value"
      type: "object"
      properties:
        value:
          pattern: "^\\d+(\\.\\d+)?$"
          type: "string"
          description: "The weight expressed in the selected `unit`"
          example: "123.456"
        unit:
          type: "string"
          description: |-
            The unit in which the weight `value` is expressed
             * `GRM` - Grams
             * `KGM` - Kilograms
             * `LBR` - Pounds
             * `ONZ` - Ounce
          example: "KGM"
      description: "Representation of a weight including the unit in which it is expressed."
  headers:
    API-Version:
      description: "SemVer used to indicate the version of the contract (API version) returned."
      schema:
        type: "string"
        example: "1.0.0"
